{"version":3,"sources":["api/LocationServiceApi.js","api/UserServiceApi.js","components/header.jsx","components/landingBodyComponents/overview.jsx","components/landingBodyComponents/cars.jsx","components/landingBodyComponents/faqs.jsx","components/landingBody.jsx","components/landing.jsx","components/signup.jsx","components/login.jsx","components/map.jsx","AuthenticatedRoute.jsx","components/staffComponents/staffDashboard.jsx","StaffRoute.jsx","components/locationShow.jsx","Constants.js","api/BookingServiceApi.js","components/bookingComponents/bookingConfirmDetails.jsx","components/bookingComponents/filterCars.jsx","components/bookingComponents/bookingDashboard.jsx","components/bookingComponents/myBookings.jsx","components/bookingComponents/bookingDetails.jsx","components/myProfile.jsx","components/staffComponents/overview.jsx","components/adminComponents/adminSignup.jsx","components/staffComponents/createCar.jsx","components/staffComponents/createLocation.jsx","components/staffComponents/viewAllCustomers.jsx","components/staffComponents/viewCustomer.jsx","components/staffComponents/modifyCustomerDetails.jsx","components/staffComponents/viewAllBookings.jsx","components/staffComponents/viewBooking.jsx","components/staffComponents/viewCustomerBookings.jsx","components/staffComponents/viewAllCars.jsx","components/staffComponents/modifyCarDetails.jsx","components/staffComponents/viewAllLocations.jsx","components/staffComponents/ViewLocation.jsx","components/staffComponents/modifyLocationPage.jsx","App.js","serviceWorker.js","index.js","api/CarServiceApi.js"],"names":["require","config","api_url","process","LocationServiceApi","axios","get","id","newLocation","post","address","formatted_address","replace","create","url","location","patch","_id","TOKEN_SESSION_ATTRIBUTE_NAME","TOKEN_HEADER_LENGTH","UserServiceApi","headers","authorization","this","getUserToken","email","newUser","creds","console","log","user","token","localStorage","setItem","setupAxiosInterceptors","getItem","jwt_decode","slice","interceptors","request","use","isUserLoggedIn","getLoggedInUserDetails","usertype","removeItem","window","href","Header","isUserStaff","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","NavItem","onClick","logout","Component","Overview","Container","fluid","style","marginTop","Row","Col","Button","Cars","props","state","cars","BusServiceApi","getAllCars","then","res","data","forEach","car","getLocationFromId","name","locationId","push","setState","map","CarDescriptionComponent","sm","src","image","alt","width","make","fueltype","bodytype","seats","colour","costperhour","Faqs","Accordion","AccordionCustom","eventKey","question","answer","Card","marginBottom","as","variant","Body","navWhenSelectedStyle","borderBottom","landingBody","component","event","target","innerHTML","activeKey","Item","handleClick","bind","RenderCorrectComponents","LandingPage","to","fontSize","SignUpPage","handleChange","value","handleSubmit","preventDefault","firstname","trim","lastname","password","errorMessage","test","String","toLowerCase","createNewUser","loginUser","registerSuccessfulLoginForJwt","catch","error","response","message","Alert","Heading","Form","onSubmit","Group","controlId","Label","column","Control","type","placeholder","onChange","required","pattern","title","span","offset","LoginPage","MapContainer","mapOnMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","mapOnMapClick","locations","location_array","getAllLocations","element","getGeocodeFromAddress","object","lat","results","geometry","lng","height","google","initialCenter","zoom","position","onClose","onInfoWindowClose","visible","React","GoogleApiWrapper","apiKey","AuthenticatedRoute","FunctionSelectedStyle","color","FunctionNotSelectedStyle","StaffDashboard","currentLocation","pathname","isAdmin","isUserAdmin","margin","padding","maxWidth","md","paddingTop","children","StaffRoute","rest","render","matchProps","LocationShowPage","isLoading","location_id","match","split","newRes","locationObject","carId","CarServiceApi","getCar","Jumbotron","length","CAR_COLOURS","CAR_BODY_TYPES","CAR_SEATS","CAR_FUEL_TYPES","booking","userId","bookingId","BookingConfirmDetailsPopUp","handleConfirmButton","destination","newBooking","pickupTime","returnTime","getLoggedInUserID","BookingServiceApi","createBooking","handleCancelButton","togglePopUp","destinations","destinationArray","defaultDestination","pickupTimeHours","Date","returnTimeHours","timeDeltaHours","getTime","parseInt","toFixed","cost","calculateBookingCost","defaultValue","FilterCarsPage","handleSubmitFilter","newFilter","availableCars","filterCars","popUp","selectedCar","history","locationArray","carSeat","carFuel","carBodyType","carColour","Table","striped","bordered","hover","BookingDashboard","newSearch","searchAvailableCars","updateCars","nextBooking","nextBookingExists","successHeader","successMsg","availablePickup","avaialbleReturn","handlePickupButton","handleReturnButton","status","modifyBooking","getNextBooking","Object","keys","currentTime","setMinutes","getMinutes","getTimezoneOffset","pickuptime","bookedtime","returntime","disabled","numberplate","MyBookingPage","bookings","getUsersBookings","checkBookingPast","destinationObject","userDetails","getUserBookings","reverse","BookingDetailsPage","getBookingDetails","getUserBooking","params","default","MyProfilePage","userData","overview","AdminSignUpPage","successMessage","selected","createCar","resetState","b64photo","handleFile","files","size","errMsg","reader","FileReader","readAsDataURL","onload","result","inputValidation","disableSubmit","newCar","createNewCar","err","locationList","concat","option","index","key","File","label","accept","CreateLocation","initMap","gmapsLoaded","handleAutocomplete","newLoc","createNewLocation","gmapScriptEl","document","createElement","querySelector","insertAdjacentElement","onSelect","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","backgroundColor","cursor","description","ViewAllCustomersPage","customers","getAllCustomers","customer","ViewCustomerPage","getUserFromId","ButtonGroup","ModifyCustomerDetailsPage","modifiedCustomer","modifyErrorMessage","checkEmailExistsPayload","checkEmailExists","exist","updateUser","fetchErrorMessage","ViewAllBookingsPage","getAllBookings","ViewBookingPage","getBooking","ViewCustomerBookingsPage","ViewAllCars","viewCarDetails","currentbooking","withRouter","ModifyCarDetails","carDetails","updateCar","scrollTop","scrollTo","top","behavior","ViewAllLocations","ViewLocation","errMessage","undefined","success","modifyLocationPage","updateLocation","App","exact","path","CreateCar","ModifyCarDetailsPage","ViewAllCarsPage","ModifyLocationPage","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","getElementById","URL","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","search","filter"],"mappings":"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","file":"static/js/main.74db9756.chunk.js","sourcesContent":["/* Location service APIs */\nimport axios from 'axios';\nrequire('dotenv').config();\nconst api_url = process.env.REACT_APP_SERVER_URL + \"/locations\" || \"http://localhost:3001/api/locations\";\n// const api_url = \"http://localhost:3001/api/locations\"\n\nclass LocationServiceApi {\n    getAllLocations() {\n        return axios.get(api_url);\n    }\n\n    getLocationFromId(id) {\n        return axios.get(`${api_url}/${id}`);\n    }\n\n    createNewLocation(newLocation) {\n        return axios.post(api_url, newLocation);\n    }\n\n    getGeocodeFromAddress(address) {\n        const url = \"https://maps.googleapis.com/maps/api/geocode/json?address=\";\n        const api_key = \"AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms\";\n        const formatted_address = address.replace(/ /g, \"+\");\n        const key_input = \"&key=\"\n        // create new axios instance without auth token for third party API\n        const axiosThirdParty = axios.create();\n        return axiosThirdParty.get(`${url + formatted_address + key_input + api_key}`);\n    }\n\n    updateLocation(location) {\n        return axios.patch(api_url + `/${location._id}`, location);\n    }\n}\n\nexport default new LocationServiceApi();\n","/* User service APIs */\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nconst api_url = process.env.REACT_APP_SERVER_URL + \"/users\" || \"http://localhost:3001/api/users\";\n//const api_url = \"http://localhost:3001/api/users\";\n\n// for user JWT storage\nexport const TOKEN_SESSION_ATTRIBUTE_NAME = 'token';\nexport const TOKEN_HEADER_LENGTH = 7;\n\nclass UserServiceApi {\n    getAllUsers() {\n        return axios.get(api_url);\n    }\n\n    getAllCustomers() {\n        return axios.get(api_url + '/customers', { headers: { authorization: this.getUserToken() } });\n    }\n\n    getUserFromId(id) {\n        return axios.get(`${api_url}/${id}`, { headers: { authorization: this.getUserToken() } });\n    }\n\n    checkEmailExists(email) {\n        return axios.post(`${api_url}/email`, email);\n    }\n\n    createNewUser(newUser) {\n        return axios.post(api_url, newUser);\n    }\n\n    loginUser(creds) {\n        console.log(api_url);\n        return axios.post(`${api_url}/login`, creds);\n    }\n\n    updateUser(user) {\n        return axios.patch(`${api_url}/${user._id}`, user);\n    }\n\n    registerSuccessfulLoginForJwt(token) {\n        localStorage.setItem(TOKEN_SESSION_ATTRIBUTE_NAME, token);\n        this.setupAxiosInterceptors(token);\n    }\n\n    getLoggedInUserID() {\n        let token = localStorage.getItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        if (token === null) return '';\n        return jwt_decode(token.slice(TOKEN_HEADER_LENGTH)).id;\n    }\n\n    getLoggedInUserDetails() {\n        let token = localStorage.getItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        if (token === null) return '';\n        return jwt_decode(token.slice(TOKEN_HEADER_LENGTH));\n    }\n\n    getUserToken() {\n        let token = localStorage.getItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        if (token === null) return '';\n        return token.slice(TOKEN_HEADER_LENGTH);\n    }\n\n    setupAxiosInterceptors(token) {\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn()) {\n                    config.headers.authorization = token;\n                }\n                return config;\n            }\n        )\n    }\n\n    isUserLoggedIn() {\n        let user = localStorage.getItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        if (user === null) {\n            return false;\n        }\n        return true;\n    }\n\n    isUserStaff() {\n        let user = this.getLoggedInUserDetails();\n        if (user.usertype === \"admin\" || user.usertype === \"staff\") {\n            return true;\n        }\n        return false;\n    }\n\n    isUserAdmin() {\n        let user = this.getLoggedInUserDetails();\n        if (user.usertype === \"admin\") {\n            return true;\n        }\n        return false;\n    }\n\n    logout() {\n        localStorage.removeItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        window.location.href = `/`;\n    }\n}\n\nexport default new UserServiceApi();\n","/* header component */\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport UserServiceApi from '../api/UserServiceApi';\n\nclass Header extends Component {\n    render() {\n        const isUserLoggedIn = UserServiceApi.isUserLoggedIn();\n        const isUserStaff = UserServiceApi.isUserStaff();\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/\">Uber Bus</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"container-fluid\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"/locations\">Locations</Nav.Link>\n                        {isUserLoggedIn &&\n                            <>\n                                {!isUserStaff && <Nav.Link href=\"/myprofile\">My Profile</Nav.Link>}\n                                {!isUserStaff && <Nav.Link href=\"/mybookings\">My Bookings</Nav.Link>}\n                                {!isUserStaff && <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>}\n                                {isUserStaff && <Nav.Link href=\"/staff\">Staff Dashboard</Nav.Link>}\n                            </>\n                        }\n                        {isUserLoggedIn &&\n                            <NavItem className=\"ml-auto\">\n                                <Nav.Link onClick={UserServiceApi.logout}>Logout</Nav.Link>\n                            </NavItem>\n                        }\n                    </Nav>\n                    <Nav>\n                        {!isUserLoggedIn &&\n                            <>\n                                <Nav.Link href=\"/signup\">Signup</Nav.Link>\n                                <Nav.Link href=\"/login\">Login</Nav.Link>\n                            </>\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default Header;\n","/* Overview component in landing page */\nimport React, { Component } from 'react';\nimport { Container, Col, Row, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPiggyBank, faCar, faPhone, faMoneyBill } from '@fortawesome/free-solid-svg-icons';\nimport '../../styles/overview.css';\n\nexport default class Overview extends Component {\n    render() {\n        return (\n            <section className=\"section-item\">\n                <div>\n                    <h2>Overview</h2>\n                    <Container fluid style={{ marginTop: '3vh' }}>\n                        <Row>\n                            <Col>\n                                <div className=\"how-it-works\">\n                                    <h3>Sign up</h3>\n                                    <p>Simply Sign up for free and Log in to our application</p>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div className=\"how-it-works\">\n                                    <h3>Book</h3>\n                                    <p>Checkout your nearest buses <a href=\"/locations\">here</a>, then head over to dashboard, pick a time range to get started!</p>\n                                </div>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                        </Row>\n                    </Container>\n                    <div className=\"find-nearest-car-div\">\n                        <h2>Find your nearest bus</h2>\n                        <p>Our buses are spread all over United States. There's probably one near you</p>\n                        <div>\n                            <Button href=\"/locations\">Check out our locations</Button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n","/* Cars component in landing page */\nimport React, { Component } from 'react'\nimport BusServiceApi from '../../api/CarServiceApi.js';\nimport LocationServiceApi from '../../api/LocationServiceApi.js';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport '../../styles/cars.css';\n\nexport default class Cars extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cars: []\n        };\n    }\n\n    componentDidMount() {\n        // obtain all cars\n        BusServiceApi.getAllCars().then(res => {\n            res.data.cars.forEach(car => {\n                LocationServiceApi.getLocationFromId(car.location).then(res => {\n                    car.location = res.data.name\n                    car.locationId = res.data._id\n                    this.state.cars.push(car);\n                    this.setState({\n                        cars: this.state.cars\n                    });\n                });\n            });\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"section-item\">\n                <div>\n                    <h2>Our buses</h2>\n                    <Container fluid>\n                        <Row>\n                            {\n                                this.state.cars.map(car =>\n                                    <CarDescriptionComponent car={car} />)\n                            }\n                        </Row>\n                    </Container>\n                </div>\n                <div className=\"find-nearest-car-div\">\n                    <h2>Find your nearest bus</h2>\n                    <p>Our buses are spread all over United States. There's probably one near you</p>\n                    <div>\n                        <Button href=\"/locations\">Check out our locations</Button>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nfunction CarDescriptionComponent(props) {\n    // car description component card\n    const { car } = props\n    return (\n        <Col sm={4}>\n            <div className=\"cars-div-white\">\n                <img src={car.image} alt=\"car\" width=\"100\" />\n                <h2 style={{ marginTop: '1vh' }}>{car.make}</h2>\n                <p>{car.fueltype}, {car.bodytype}, {car.seats} seaters, {car.colour}</p>\n                <h5>${car.costperhour} per hour</h5>\n                <a href={\"/locations/\" + car.locationId}><strong>Garage Location:</strong> {car.location}</a>\n            </div>\n        </Col>\n    );\n}\n","/* FAQs component in landing page */\nimport React, { Component } from 'react';\nimport { Accordion, Card, Button } from 'react-bootstrap';\n\nexport default class Faqs extends Component {\n    render() {\n        return (\n            <section className=\"section-item\">\n                <div>\n                    <h2>FAQs</h2>\n                    <Accordion style={{ marginTop: '7vh' }}>\n                        <AccordionCustom eventKey=\"1\" question=\"How do I book a bus?\" answer=\"Signup for an account if you haven't already, login and click on Dashboard to get started!\" />\n                        <AccordionCustom eventKey=\"2\" question=\"How do I return when I'm done?\" answer=\"Head over to Dashboard and select the Return button and you're good to go!\" />\n                        <AccordionCustom eventKey=\"3\" question=\"Can I cancel my bookings prior pickup time?\" answer=\"Yes most definitely! You can do it through My Bookings dashboard.\" />\n                        <AccordionCustom eventKey=\"4\" question=\"Can I smoke in your bus?\" answer=\"Smoking is prohibited and will incur a $300 penalty if found guilty.\" />\n                    </Accordion>\n                </div>\n            </section>\n        );\n    }\n}\n\nfunction AccordionCustom(props) {\n    // FAQ render element\n    const { eventKey, question, answer } = props\n    return (\n        <Card style={{ marginBottom: '3vh' }}>\n            <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={eventKey}>\n                    {question}\n                </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey={eventKey}>\n                <Card.Body>{answer}</Card.Body>\n            </Accordion.Collapse>\n        </Card>\n    );\n}\n","/* landing page body component */\nimport React, { Component } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport '../styles/landingBody.css';\nimport Overview from './landingBodyComponents/overview';\nimport Cars from './landingBodyComponents/cars';\nimport Faqs from './landingBodyComponents/faqs';\n\n// define styles\nconst navWhenSelectedStyle = {\n    borderBottom: \"4px solid #009bde\"\n};\n\nexport default class landingBody extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            component: 'Overview'\n        };\n    }\n\n    handleClick(event) {\n        this.setState({\n            component: event.target.innerHTML\n        });\n    }\n\n    render() {\n        const { component } = this.state;\n        return (\n            <div id=\"landing-body\">\n                <Nav id=\"landing-body-nav\" className=\"justify-content-center\" activeKey=\"/home\">\n                    <Nav.Item onClick={this.handleClick.bind(this)} style={(component === \"Overview\") ? navWhenSelectedStyle : {}}>\n                        <Nav.Link className=\"nav-link\">Overview</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item onClick={this.handleClick.bind(this)} style={(component === \"Cars\") ? navWhenSelectedStyle : {}}>\n                        <Nav.Link className=\"nav-link\">Bus</Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                <RenderCorrectComponents component={this.state.component} />\n            </div>\n        )\n    }\n}\n\n/* Function components */\nfunction RenderCorrectComponents(props) {\n    const { component } = props\n    switch (component) {\n        case \"Overview\":\n            return (<Overview />);\n        case \"Bus\":\n            return (<Cars />);\n        case \"FAQs\":\n            return (<Faqs />);\n        default:\n            return (<Overview />);\n    }\n}\n","/* landing page component */\nimport React, { Component } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport '../styles/landing.css';\nimport LandingBody from './landingBody';\nimport UserServiceApi from '../api/UserServiceApi';\n\nclass LandingPage extends Component {\n    render() {\n        const isUserLoggedIn = UserServiceApi.isUserLoggedIn();\n        const isUserStaff = UserServiceApi.isUserStaff();\n        return (\n            <>\n                <Container id=\"landing-page\" fluid>\n                    <div id=\"catchphrase\">\n                        <h1>Uber Bus</h1>\n                        <h4>There is a driver waiting for you</h4>\n\n                        {(isUserLoggedIn && !isUserStaff) &&\n                            <>\n                                <Link to=\"/dashboard\">\n                                    <Button variant=\"warning\" style={{ fontSize: '2vh' }}>Dashboard</Button>\n                                </Link>\n                            </>\n                        }\n                        {(isUserLoggedIn && isUserStaff) &&\n                            <>\n                                <Link to=\"/staff\">\n                                    <Button variant=\"warning\" style={{ fontSize: '2vh' }}>Manage System</Button>\n                                </Link>\n                            </>\n                        }\n                        {!isUserLoggedIn &&\n                            <>\n                                <Link to=\"/signup\">\n                                    <Button variant=\"warning\" style={{ fontSize: '2vh' }}>Sign Up Now</Button>\n                                </Link>\n                            </>\n                        }\n                    </div>\n                </Container>\n                <Container id=\"landing-main\" fluid>\n                    <LandingBody />\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default LandingPage;\n","/* Signup page */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\nimport UserServiceApi from '../api/UserServiceApi.js';\n\nclass SignUpPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstname: '',\n            lastname: '',\n            email: '',\n            password: '',\n            errorMessage: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /* Set react state for each input when user inputs something on signup form */\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        /* create new user object */\n        let newUser = {\n            firstname: this.state.firstname.trim(),\n            lastname: this.state.lastname.trim(),\n            email: this.state.email,\n            password: this.state.password,\n            usertype: \"customer\"\n        };\n        // input validation\n        if (this.state.firstname === '') {\n            return this.setState({ errorMessage: \"First name can't be empty!\" });\n        }\n        if (this.state.lastname === '') {\n            return this.setState({ errorMessage: \"Last name can't be empty!\" });\n        }\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!emailRegex.test(String(this.state.email).toLowerCase())) {\n            return this.setState({ errorMessage: \"Please enter a valid email!\" });\n        }\n        // publish new user to backend\n        UserServiceApi.createNewUser(newUser).then(() => {\n            // login user on success\n            UserServiceApi.loginUser({ email: this.state.email, password: this.state.password }).then(res => {\n                UserServiceApi.registerSuccessfulLoginForJwt(res.data.token);\n                window.location.href = `/`;\n            })\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Sign up failed!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <Form onSubmit={this.handleSubmit} id=\"signup_form\" >\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\n                        <Form.Label column sm={2}>\n                            First Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"firstname\" type=\"firstname\" placeholder=\"First Name\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalLastName\">\n                        <Form.Label column sm={2}>\n                            Last Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"lastname\" type=\"lastname\" placeholder=\"Last Name\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={2}>\n                            Password\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"password\" type=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain: at least one number, one uppercase, lowercase letter, and at least 8 or more characters\" placeholder=\"Password\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button type=\"submit\">Create Account</Button>\n                        </Col>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <a href=\"/login\">Have an account?</a>\n                        </Col>\n                    </Form.Group>\n                </Form>\n\n            </div>\n        )\n    }\n}\n\nexport default SignUpPage;\n","/* login page */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\nimport UserServiceApi from '../api/UserServiceApi.js';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            errorMessage: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /* Set react state for each input when user inputs something on login form */\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = event => {\n        // login button handler\n        event.preventDefault();\n        let creds = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        // email validation\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!emailRegex.test(String(this.state.email).toLowerCase())) {\n            return this.setState({ errorMessage: \"Please enter a valid email!\" });\n        }\n        // publish login details to backend\n        UserServiceApi.loginUser(creds).then(res => {\n            UserServiceApi.registerSuccessfulLoginForJwt(res.data.token);\n            window.location.href = `/`;\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Login failed!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <Form onSubmit={this.handleSubmit} id=\"login_form\">\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={2}>\n                            Password\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"password\" type=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain: at least one number, one uppercase, lowercase letter, and at least 8 or more characters\" placeholder=\"Password\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button type=\"submit\">Login</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage;\n","/* Location/Map page */\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport LocationServiceApi from '../api/LocationServiceApi.js';\nimport \"../styles/map.css\";\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [],\n      activeMarker: {},\n      showingInfoWindow: false,\n      selectedPlace: {}\n    };\n  }\n\n  componentDidMount() {\n    // obtain all locations\n    let location_array = this.state.locations;\n    // Get all locations from backend\n    LocationServiceApi.getAllLocations().then(res => {\n      const data = res.data;\n      // Iterate through each address and get latitude and longitude\n      data.forEach(element => {\n        LocationServiceApi.getGeocodeFromAddress(element.address)\n          .then(res => {\n            // Create object with address, latitude and longitude\n            let object = {\n              id: element._id,\n              address: element.address,\n              name: element.name,\n              lat: res.data.results[0].geometry.location.lat,\n              lng: res.data.results[0].geometry.location.lng,\n              cars: element.cars\n            };\n            // Push address, lat, long as object to react state array\n            location_array.push(object);\n            this.setState({\n              locations: location_array\n            });\n          });\n      });\n    });\n  }\n\n  mapOnMarkerClick = (props, marker) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n\n  mapOnMapClick = () =>\n    this.setState({\n      showingInfoWindow: false,\n      selectedPlace: {},\n      activeMarker: {}\n    });\n\n  render() {\n    return (\n      <div style={{ height: \"100vh\" }}>\n        <Map google={this.props.google}\n          initialCenter={{\n            lat: -37.815198,\n            lng: 144.957045\n          }}\n          zoom={14}\n          onClick={this.mapOnMapClick}>\n\n          {this.state.locations.map(marker => {\n            return (\n              <Marker\n                id={marker.id}\n                name={marker.name}\n                address={marker.address}\n                onClick={this.mapOnMarkerClick}\n                position={{ lat: marker.lat, lng: marker.lng }}\n              />)\n          })}\n\n          <InfoWindow\n            onClose={this.onInfoWindowClose}\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <div id=\"info-window\">\n              <h2>{this.state.selectedPlace.name}</h2>\n              <p>{this.state.selectedPlace.address}</p>\n              <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n            </div>\n          </InfoWindow>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms\"\n})(MapContainer);\n","/* authenticated router */\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserServiceApi from './api/UserServiceApi';\n\n\nclass AuthenticatedRoute extends Component {\n    //This class authenticates and verifies the user, otherwise redirects the web to the login page.\n    render() {\n        if (UserServiceApi.isUserLoggedIn()) {\n            return <Route {...this.props} />\n        } else {\n            return <Redirect to=\"/\" />\n        }\n    }\n}\n\nexport default AuthenticatedRoute;\n","/* Staff dashboard page/wrapper */\nimport React, { Component } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport UserServiceApi from '../../api/UserServiceApi';\nimport '../../styles/staffDashboard.css';\n\n// define styles\nconst FunctionSelectedStyle = {\n    borderBottom: \"4px solid #009bde\",\n    color: \"white\"\n};\nconst FunctionNotSelectedStyle = {\n    color: \"white\"\n};\n\nexport default class StaffDashboard extends Component {\n    render() {\n        const currentLocation = window.location.pathname;\n        const isAdmin = UserServiceApi.isUserAdmin;\n        return (\n            <Container style={{ margin: \"0\", padding: \"0\", maxWidth: \"100%\" }}>\n                <Row style={{ margin: \"0\" }}>\n                    <Col className=\"sidenav\" md={2}>\n                        <h3>{isAdmin ? \"Admin\" : \"Staff\"} Functions</h3>\n                        <p><a href=\"/staff\" style={(currentLocation === \"/staff\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>Overview</a></p>\n                        {\n                            isAdmin &&\n                            <>\n                                <p><a href=\"/admin/signup\" style={(currentLocation === \"/admin/signup\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>Create Account</a></p>\n                                <p><a href=\"/admin/addcars\" style={(currentLocation === \"/admin/addcars\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>Create Bus</a></p>\n                                <p><a href=\"/admin/addlocation\" style={(currentLocation === \"/admin/addlocation\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>Add Location</a></p>\n                                <p><a href=\"/admin/view/customers\" style={(currentLocation === \"/admin/customers\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>View All Customers</a></p>\n                                <p><a href=\"/admin/view/bookings\" style={(currentLocation === \"/admin/view/bookings\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>View All Bookings</a></p>\n                                <p><a href=\"/admin/view/cars\" style={(currentLocation === \"/admin/view/cars\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>View All Buses</a></p>\n                                <p><a href=\"/admin/view/location\" style={(currentLocation === \"/admin/view/location\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>View All Locations</a></p>\n                            </>\n                        }\n                    </Col>\n                    <Col className=\"main\" md={10} style={{ paddingTop: '5vh' }}>\n                        {this.props.children}\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n","/* Staff router */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserServiceApi from './api/UserServiceApi';\nimport StaffDashboard from './components/staffComponents/staffDashboard';\n\nconst StaffRoute = ({ component: Component, ...rest }) => {\n    //This class authenticates and verifies the staff member, otherwise redirects the web to the login page.\n    if (UserServiceApi.isUserLoggedIn() && (UserServiceApi.isUserStaff() || UserServiceApi.isUserAdmin())) {\n        return (\n            <Route {...rest} render={matchProps => (\n                <StaffDashboard>\n                    <Component {...matchProps} />\n                </StaffDashboard>\n            )} />\n        );\n    } else {\n        return <Redirect to=\"/\" />\n    }\n}\n\nexport default StaffRoute;\n","/* Location show page */\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Jumbotron, Button } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport LocationServiceApi from '../api/LocationServiceApi.js';\nimport CarServiceApi from '../api/CarServiceApi.js';\nimport \"../styles/map.css\";\n\nclass LocationShowPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: {},\n            cars: [],\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n    }\n\n    componentDidMount() {\n        // obtain location id from url parameters\n        let url = this.props.match.url;\n        let location_id = url.split(\"/\")[2];\n        // Get location from id\n        LocationServiceApi.getLocationFromId(location_id).then(res => {\n            LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                .then(newRes => {\n                    // Create object with address, latitude and longitude\n                    let locationObject = {\n                        id: res.data._id,\n                        address: res.data.address,\n                        name: res.data.name,\n                        lat: newRes.data.results[0].geometry.location.lat,\n                        lng: newRes.data.results[0].geometry.location.lng,\n                        cars: res.data.cars\n                    };\n                    // set new location object to react state array\n                    this.setState({\n                        location: locationObject,\n                        isLoading: true\n                    });\n                });\n            res.data.cars.forEach(carId => {\n                CarServiceApi.getCar(carId).then(res => {\n                    this.state.cars.push(res.data.car);\n                    this.setState({\n                        cars: this.state.cars\n                    });\n                });\n            });\n        });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    render() {\n        return (\n            <Container style={{ 'padding': '1vh' }}>\n                <Jumbotron>\n                    <h2>Welcome to one of our locations</h2>\n                    <Button href=\"/locations\" variant=\"primary\">Back to the map</Button>\n                </Jumbotron>\n                {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\n                    <Map google={this.props.google}\n                        initialCenter={{\n                            lat: this.state.location.lat,\n                            lng: this.state.location.lng\n                        }}\n                        style={{ height: '400px', width: '400px' }}\n                        zoom={14}\n                        onClick={this.mapOnMapClick}>\n\n                        <Marker\n                            id={this.state.location.id}\n                            name={this.state.location.name}\n                            address={this.state.location.address}\n                            onClick={this.mapOnMarkerClick}\n                            position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                        />\n\n                        <InfoWindow\n                            onClose={this.onInfoWindowClose}\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}>\n                            <div id=\"info-window\">\n                                <h2>{this.state.selectedPlace.name}</h2>\n                                <p>{this.state.selectedPlace.address}</p>\n                                <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                </div>}\n                <h3>{this.state.location.name}</h3>\n                <strong>Address: </strong>\n                <p>{this.state.location.address}</p>\n                <strong>Number of cars: </strong>\n                <p>{this.state.cars.length}</p>\n                <strong>Cars at this location:</strong>\n                <Container fluid id=\"car-show\">\n                    <Row>\n                        {this.state.cars.map(car =>\n                            <CarDescriptionComponent car={car} />\n                        )}\n                    </Row>\n                </Container>\n            </Container>\n        )\n    }\n}\n\nfunction CarDescriptionComponent(props) {\n    // car description component card\n    const { car } = props\n    return (\n        <Col sm={4}>\n            <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n                <img src={car.image} alt=\"car\" width=\"100\" />\n                <h2 style={{ marginTop: '1vh' }}>{car.make}</h2>\n                <p>{car.fueltype}, {car.bodytype}, {car.seats} seaters, {car.colour}</p>\n                <h5>${car.costperhour} per hour</h5>\n            </div>\n        </Col>\n    );\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms\"\n})(LocationShowPage);\n","/* App constants are defined below */\nexport const CAR_COLOURS = [\"Black\", \"Yellow\", \"Blue\", \"White\", \"Green\", \"Red\", \"Orange\", \"Purple\"];\nexport const CAR_BODY_TYPES = [\"Sedan\", \"MPV\", \"Sports\", \"Hatchback\", \"Ute\"];\nexport const CAR_SEATS = [2, 4, 5, 6, 7];\nexport const CAR_FUEL_TYPES = [\"Petrol\", \"Diesel\"];\nexport const CAR_DESTINATION = [\"BOSTON\", \"San Jose\"];\nexport const FILE_UPLOAD_LIMIT = 4000000 // 4mb\n","/* Booking service APIs */\nimport axios from 'axios';\nimport UserServiceApi from './UserServiceApi';\nrequire('dotenv').config();\nconst api_url = process.env.REACT_APP_SERVER_URL + \"/bookings\" || \"http://localhost:3001/api/bookings\";\n//const api_url = \"http://localhost:3001/api/bookings\";\n\nclass BookingServiceApi {\n    getNextBooking() {\n        return axios.get(`${api_url}/customers/next`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n\n    createBooking(booking) {\n        return axios.post(api_url, booking);\n    }\n\n    getUserBookings(userId) {\n        return axios.get(`${api_url}/customers/all/${userId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n\n    getUserBooking(bookingId) {\n        return axios.get(`${api_url}/customers/${bookingId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n\n    modifyBooking(booking) {\n        return axios.patch(`${api_url}/customers/${booking.id}`, booking);\n    }\n\n    getAllBookings() {\n        return axios.get(`${api_url}/customers/all`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n\n    getBooking(bookingId) {\n        return axios.get(`${api_url}/${bookingId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n}\n\nexport default new BookingServiceApi();\n","/* Bookings confirm details page */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Alert, Container } from 'react-bootstrap';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport UserServiceApi from '../../api/UserServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\n\nclass BookingConfirmDetailsPopUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorMessage: '',\n            location: {},\n            destination: '',\n            destinations: [],\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false,\n        };\n        this.handleConfirmButton = this.handleConfirmButton.bind(this);\n        this.handleCancelButton = this.handleCancelButton.bind(this);\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleConfirmButton = event => {\n        // prevent browser from refreshing on click\n        event.preventDefault();\n        // generate new booking object\n\n        console.log(this.state.destination);\n\n        let newBooking = {\n            pickupTime: this.props.pickupTime,\n            returnTime: this.props.returnTime,\n            user: UserServiceApi.getLoggedInUserID(),\n            car: this.props.car._id,\n            destination: this.state.destination,\n            location: this.props.car.location,\n        };\n\n        console.log(newBooking);\n\n        // publish create booking request to backend\n        BookingServiceApi.createBooking(newBooking)\n            .then(res => {\n                // redirect to booking details page on success\n                window.location.href = `/mybookings/${res.data.response.booking._id}`;\n            })\n            .catch((error) => {\n                // display error message on failure\n                this.setState({ errorMessage: error.response.data.message });\n            })\n    };\n\n    handleCancelButton = event => {\n        // prevent browser from refreshing on click\n        event.preventDefault();\n        this.props.togglePopUp();\n    };\n\n    componentDidMount() {\n        const { car } = this.props;\n\n        // obtain location from id\n        LocationServiceApi.getLocationFromId(car.location)\n            .then(res => {\n                LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                    .then(newRes => {\n                        // Create object with address, latitude and longitude\n                        let locationObject = {\n                            id: res.data._id,\n                            address: res.data.address,\n                            name: res.data.name,\n                            lat: newRes.data.results[0].geometry.location.lat,\n                            lng: newRes.data.results[0].geometry.location.lng,\n                            cars: res.data.cars\n                        }\n                        // set new location object to react state array\n                        this.setState({\n                            location: locationObject,\n                            isLoading: true\n                        })\n                    });\n            });\n\n        // obtain all destinations\n        let destinationArray = this.state.destinations;\n        let defaultDestination = this.state.destination;\n        LocationServiceApi.getAllLocations().then(res => {\n            res.data.forEach(location => {\n                let locationObject = {\n                    id: location._id,\n                    address: location.address,\n                    name: location.name\n                }\n                destinationArray.push(locationObject);\n            });\n            defaultDestination = destinationArray[0].id;\n            this.setState({ destination: defaultDestination });\n        });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    calculateBookingCost() {\n        // cost calculation based on pickup time and return time difference\n        const pickupTimeHours = new Date(this.props.pickupTime);\n        const returnTimeHours = new Date(this.props.returnTime);\n        const timeDeltaHours = new Date(returnTimeHours - pickupTimeHours).getTime() / 3600;\n\n        const cost = parseInt(this.props.car.costperhour) * (timeDeltaHours / 1000);\n        return cost.toFixed(2);\n    }\n\n    render() {\n        const { locations, car, pickupTime, returnTime } = this.props;\n        const cost = this.calculateBookingCost();\n\n        return (<div className=\"container\">\n            {this.state.errorMessage && <Alert variant=\"danger\">\n                <Alert.Heading>Booking failed!</Alert.Heading>\n                <p>\n                    {this.state.errorMessage}\n                </p>\n            </Alert>}\n            <h2>Confirm Booking?</h2>\n            {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\n                <Map google={this.props.google}\n                    initialCenter={{\n                        lat: this.state.location.lat,\n                        lng: this.state.location.lng\n                    }}\n                    style={{ height: '400px', width: '400px' }}\n                    zoom={14}\n                    onClick={this.mapOnMapClick}>\n\n                    <Marker\n                        id={this.state.location.id}\n                        name={this.state.location.name}\n                        address={this.state.location.address}\n                        onClick={this.mapOnMarkerClick}\n                        position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                    />\n\n                    <InfoWindow\n                        onClose={this.onInfoWindowClose}\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                        <div id=\"info-window\">\n                            <h2>{this.state.selectedPlace.name}</h2>\n                            <p>{this.state.selectedPlace.address}</p>\n                            <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                        </div>\n                    </InfoWindow>\n                </Map>\n            </div>}\n            <b>Pickup time: </b> {pickupTime} <br></br>\n            <b>Return time: </b> {returnTime} <br></br>\n            <b>Cost: </b> ${cost} <br></br>\n            <b>Location: </b> {locations.map(location =>\n                <>\n                    {location.id === car.location &&\n                        <>\n                            {location.name}\n                        </>\n                    }\n                </>\n            )} <br></br>\n            <b>Address: </b> {locations.map(location =>\n                <>\n                    {location.id === car.location &&\n                        <>\n                            {location.address}\n                        </>\n                    }\n                </>\n            )} <br></br>\n            <Col sm={4}>\n                <div className=\"cars-div-white\">\n                    <img src={car.image} alt=\"car\" width=\"100\" />\n                    <h2 style={{ marginTop: '1vh' }}>{car.make}</h2>\n                    <p>{car.fueltype}, {car.bodytype}, {car.seats} seaters, {car.colour}</p>\n                    <h5>${car.costperhour} per hour</h5>\n                    <a href={\"/locations/\" + car.locationId}><strong>Garage Location:</strong> {car.location}</a>\n                </div>\n            </Col>\n\n            <Container>\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                    <Form.Label>Destination</Form.Label>\n                    <Form.Control name=\"destination\" as=\"select\" onChange={this.handleChange}>\n\n                        {this.state.destinations.map(destination =>\n                            <>\n                                <option value={destination.id} defaultValue={destination.id}>{destination.name + \" @ \" + destination.address}</option>\n                            </>\n                        )}\n                    </Form.Control>\n                </Form.Group>\n            </Container>\n            <Button variant=\"success\" onClick={this.handleConfirmButton}>Confirm</Button>\n            <Button variant=\"danger\" onClick={this.handleCancelButton}>Cancel</Button>\n        </div>);\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms\"\n})(BookingConfirmDetailsPopUp);\n","/* Filter cars page */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Row, Alert, Table, Container } from 'react-bootstrap';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport { CAR_COLOURS, CAR_BODY_TYPES, CAR_SEATS, CAR_FUEL_TYPES } from '../../Constants.js';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport BookingConfirmDetailsPopUp from './bookingConfirmDetails';\n\nclass FilterCarsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pickupTime: '',\n            returnTime: '',\n            availableCars: [],\n            make: '',\n            seats: 'Any',\n            fueltype: 'Any',\n            colour: 'Any',\n            location: 'Any',\n            bodytype: 'Any',\n            locations: [],\n            errorMessage: '',\n            popUp: false,\n            selectedCar: ''\n        };\n        this.handleSubmitFilter = this.handleSubmitFilter.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.togglePopUp = this.togglePopUp.bind(this);\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmitFilter = event => {\n        event.preventDefault();\n        // filter available cars based on attributes specified\n        let newFilter = {\n            pickupTime: this.state.pickupTime,\n            returnTime: this.state.returnTime,\n            availableCars: this.state.availableCars,\n            make: this.state.make,\n            seats: this.state.seats,\n            fueltype: this.state.fueltype,\n            colour: this.state.colour,\n            location: this.state.location,\n            bodytype: this.state.bodytype\n        };\n        // publish filter cars request to backend\n        CarServiceApi.filterCars(newFilter).then(res => {\n            this.setState({\n                availableCars: res.data.availableCars,\n                errorMessage: ''\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message, availableCars: [] });\n        });\n    }\n\n    togglePopUp(car) {\n        if (this.state.popUp)\n            car = null;\n        this.setState({\n            popUp: !this.state.popUp,\n            selectedCar: car\n        });\n    }\n\n    componentDidMount() {\n        const { availableCars, pickupTime, returnTime } = this.props;\n\n        // redirect to dashboard if props don't exist\n        if (availableCars.length === 0 || pickupTime === '' || returnTime === '') {\n            this.props.history.push('/dashboard');\n        }\n\n        this.setState({\n            availableCars: availableCars,\n            pickupTime: pickupTime,\n            returnTime: returnTime\n        });\n\n        // obtain all locations\n        let locationArray = this.state.locations;\n        LocationServiceApi.getAllLocations().then(res => {\n            res.data.forEach(location => {\n                let locationObject = {\n                    id: location._id,\n                    address: location.address,\n                    name: location.name\n                }\n                locationArray.push(locationObject);\n                this.setState({ locations: locationArray });\n            });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.popUp && <BookingConfirmDetailsPopUp locations={this.state.locations} car={this.state.selectedCar} pickupTime={this.state.pickupTime} returnTime={this.state.returnTime} togglePopUp={this.togglePopUp} />}\n                <h2>Search for a car</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error filtering cars!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <Form onSubmit={this.handleSubmitFilter} id=\"filter_form\" >\n                    <Form.Group controlId=\"formHorizontalFirstName\">\n                        <Form.Label >\n                            Make\n                        </Form.Label>\n                        <Form.Control name=\"make\" type=\"text\" placeholder=\"Make\" onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                        <Form.Label>Seats</Form.Label>\n                        <Form.Control name=\"seats\" as=\"select\" onChange={this.handleChange}>\n                            <option>Any</option>\n                            {CAR_SEATS.map(carSeat =>\n                                <>\n                                    <option>{carSeat}</option>\n                                </>\n                            )}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                        <Form.Label>Fuel Type</Form.Label>\n                        <Form.Control name=\"fueltype\" as=\"select\" onChange={this.handleChange}>\n                            <option>Any</option>\n                            {CAR_FUEL_TYPES.map(carFuel =>\n                                <>\n                                    <option>{carFuel}</option>\n                                </>\n                            )}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                        <Form.Label>Body Type</Form.Label>\n                        <Form.Control name=\"bodytype\" as=\"select\" onChange={this.handleChange}>\n                            <option>Any</option>\n                            {CAR_BODY_TYPES.map(carBodyType =>\n                                <>\n                                    <option>{carBodyType}</option>\n                                </>\n                            )}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                        <Form.Label>Colour</Form.Label>\n                        <Form.Control name=\"colour\" as=\"select\" onChange={this.handleChange}>\n                            <option>Any</option>\n                            {CAR_COLOURS.map(carColour =>\n                                <>\n                                    <option>{carColour}</option>\n                                </>\n                            )}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                        <Form.Label>Location</Form.Label>\n                        <Form.Control name=\"location\" as=\"select\" onChange={this.handleChange}>\n                            <option>Any</option>\n                            {this.state.locations.map(location =>\n                                <>\n                                    <option value={location.id}>{location.name + \" @ \" + location.address}</option>\n                                </>\n                            )}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Col >\n                            <Button type=\"submit\">Filter Buses</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n\n                <h2>Available Cars from {this.state.pickupTime} till {this.state.returnTime}</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Make</th>\n                            <th>Seats</th>\n                            <th>Body Type</th>\n                            <th>Colour</th>\n                            <th>Cost per hour</th>\n                            <th>Fuel Type</th>\n                            <th>Location</th>\n                            <th>Address</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.availableCars.map(car =>\n                            <tr>\n                                <td>{car.make}</td>\n                                <td>{car.seats}</td>\n                                <td>{car.bodytype}</td>\n                                <td>{car.colour}</td>\n                                <td>${car.costperhour}</td>\n                                <td>{car.fueltype}</td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === car.location &&\n                                                <>\n                                                    {location.name}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === car.location &&\n                                                <>\n                                                    {location.address}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>\n                                    <Button onClick={() => this.togglePopUp(car)}>Book</Button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n\nexport default FilterCarsPage;\n","/* Booking dashboard */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Row, Alert, Container } from 'react-bootstrap';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\n\nclass BookingDashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pickupTime: '',\n            returnTime: '',\n            errorMessage: '',\n            nextBooking: {},\n            nextBookingExists: false,\n            car: '',\n            location: '',\n            successHeader: '',\n            successMsg: '',\n            availablePickup: false,\n            avaialbleReturn: false,\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handlePickupButton = this.handlePickupButton.bind(this);\n        this.handleReturnButton = this.handleReturnButton.bind(this);\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        // check for available cars and redirect\n        let newSearch = {\n            pickupTime: this.state.pickupTime,\n            returnTime: this.state.returnTime\n        };\n        // publish search all available cars request to backend\n        CarServiceApi.searchAvailableCars(newSearch).then(res => {\n            // passing available cars to filter car page\n            this.props.updateCars(res.data.availableCars, this.state.pickupTime, this.state.returnTime);\n            this.props.history.push('/filter');\n        }).catch((error) => {\n            // display error if there's any\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    };\n\n    handlePickupButton() {\n        // change booking status to picked up\n        let nextBooking = this.state.nextBooking;\n        nextBooking.status = 'Picked up';\n        nextBooking.id = nextBooking._id;\n        this.setState({\n            nextBooking: nextBooking\n        });\n        // update booking object in database\n        BookingServiceApi.modifyBooking(this.state.nextBooking)\n            .then(() => {\n                this.setState({\n                    successHeader: 'Pickup success!',\n                    successMsg: \"Car has been picked up! Please return it before your specified return time.\",\n                    availablePickup: false,\n                    avaialbleReturn: true\n                });\n            });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    handleReturnButton() {\n        // change booking status to returned\n        let nextBooking = this.state.nextBooking;\n        nextBooking.status = 'Returned';\n        nextBooking.id = nextBooking._id;\n        this.setState({\n            nextBooking: nextBooking\n        });\n        // update booking object in database\n        BookingServiceApi.modifyBooking(this.state.nextBooking)\n            .then(() => {\n                this.setState({\n                    successHeader: 'Return success!',\n                    successMsg: \"Car has been returned! Thanks for using MZA Car Share!\",\n                    avaialbleReturn: false\n                })\n            })\n    }\n\n    componentDidMount() {\n        // obtain customer's upcoming booking  with required elements if any\n        BookingServiceApi.getNextBooking().then(res => {\n            if (Object.keys(res.data).length) {\n                // display upcoming booking and show pickup/return button when available\n                let currentTime = new Date();\n                currentTime.setMinutes(currentTime.getMinutes() - currentTime.getTimezoneOffset());\n                this.setState({\n                    nextBooking: res.data,\n                    nextBookingExists: true,\n                    availablePickup: (!(new Date(res.data.pickuptime) > currentTime) && res.data.status === \"Confirmed\"),\n                    avaialbleReturn: res.data.status === \"Picked up\"\n                });\n                CarServiceApi.getCar(res.data.car)\n                    .then(res => {\n                        this.setState({\n                            car: res.data.car\n                        });\n                    });\n                LocationServiceApi.getLocationFromId(res.data.location)\n                    .then(res => {\n                        LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                            .then(newRes => {\n                                // Create object with address, latitude and longitude\n                                let locationObject = {\n                                    id: res.data._id,\n                                    address: res.data.address,\n                                    name: res.data.name,\n                                    lat: newRes.data.results[0].geometry.location.lat,\n                                    lng: newRes.data.results[0].geometry.location.lng,\n                                    cars: res.data.cars\n                                };\n                                // set new location object to react state array\n                                this.setState({\n                                    location: locationObject,\n                                    isLoading: true\n                                });\n                            });\n                    });\n            }\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.successMsg &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>{this.state.successHeader}</Alert.Heading>\n                        <p>\n                            {this.state.successMsg}\n                        </p>\n                    </Alert>\n                }\n                {this.state.nextBookingExists &&\n                    <div className=\"white-cards-div\">\n                        <Container>\n                            <h2>Your upcoming booking: </h2>\n                            {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\n                                <Map google={this.props.google}\n                                    initialCenter={{\n                                        lat: this.state.location.lat,\n                                        lng: this.state.location.lng\n                                    }}\n                                    style={{ height: '400px', width: '400px' }}\n                                    zoom={14}\n                                    onClick={this.mapOnMapClick}>\n\n                                    <Marker\n                                        id={this.state.location.id}\n                                        name={this.state.location.name}\n                                        address={this.state.location.address}\n                                        onClick={this.mapOnMarkerClick}\n                                        position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                                    />\n\n                                    <InfoWindow\n                                        onClose={this.onInfoWindowClose}\n                                        marker={this.state.activeMarker}\n                                        visible={this.state.showingInfoWindow}>\n                                        <div id=\"info-window\">\n                                            <h2>{this.state.selectedPlace.name}</h2>\n                                            <p>{this.state.selectedPlace.address}</p>\n                                            <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                                        </div>\n                                    </InfoWindow>\n                                </Map>\n                            </div>}\n                            <b>Booking ID: </b> {this.state.nextBooking._id} <br></br>\n                            <b>Booking time: </b> {this.state.nextBooking.bookedtime} <br></br>\n                            <b>Pickup time: </b> {this.state.nextBooking.pickuptime} <br></br>\n                            <b>Return time: </b> {this.state.nextBooking.returntime} <br></br>\n                            <b>Cost: </b> ${this.state.nextBooking.cost} <br></br>\n                            <b>Location: </b> {this.state.location.name} <br></br>\n                            <b>Address: </b> {this.state.location.address} <br></br>\n                            <b>Status: </b> {this.state.nextBooking.status} <br></br>\n                            <Button variant=\"success\" onClick={this.handlePickupButton} disabled={!this.state.availablePickup}>Pickup</Button>\n                            <Button variant=\"danger\" onClick={this.handleReturnButton} disabled={!this.state.avaialbleReturn}>Return</Button>\n                            <Button href={`/mybookings/${this.state.nextBooking._id}`}>View Booking</Button>\n                            <Col sm={4}>\n                                <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n                                    <img src={this.state.car.image} alt=\"car\" width=\"100\" />\n                                    <h2 style={{ marginTop: '1vh' }}>{this.state.car.make}</h2>\n                                    <p>{this.state.car.fueltype}, {this.state.car.bodytype}, {this.state.car.seats} seaters, {this.state.car.colour}</p>\n                                    <h5>Number Plate: {this.state.car.numberplate}</h5>\n                                    <p><b>Bus ID: </b>{this.state.car._id}</p>\n                                </div>\n                            </Col>\n                        </Container>\n                    </div>\n                }\n                <h2>Let's find you a bus!</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error checking availability!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <Form onSubmit={this.handleSubmit} id=\"availability_form\" >\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\n                        <Form.Label column sm={2}>\n                            Pickup Time\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"pickupTime\" type=\"datetime-local\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalLastName\">\n                        <Form.Label column sm={2}>\n                            Return Time\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"returnTime\" type=\"datetime-local\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button type=\"submit\">Check Availability</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms\"\n})(BookingDashboard);\n","/* My bookings page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Container, Table } from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport UserServiceApi from '../../api/UserServiceApi';\n\nclass MyBookingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            locations: [],\n            destinations: [],\n            cars: [],\n            errorMessage: ''\n        };\n        this.handleCancelButton = this.handleCancelButton.bind(this);\n        this.getUsersBookings = this.getUsersBookings.bind(this);\n        this.checkBookingPast = this.checkBookingPast.bind(this);\n    }\n\n    componentDidMount() {\n        this.getUsersBookings();\n        // obtain all locations\n        LocationServiceApi.getAllLocations()\n            .then(res => {\n                let locationArray = this.state.locations;\n                let destinationArray = this.state.destinations;\n                res.data.forEach(location => {\n                    let locationObject = {\n                        id: location._id,\n                        address: location.address,\n                        name: location.name\n                    };\n                    let destinationObject = {\n                        id: location._id,\n                        address: location.address,\n                        name: location.name\n                    }\n                    locationArray.push(locationObject);\n                    destinationArray.push(destinationObject);\n\n                    this.setState({ locations: locationArray });\n                    this.setState({ destinations: destinationArray });\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            })\n        // obtain all cars\n        CarServiceApi.getAllCars()\n            .then(res => {\n                this.setState({\n                    cars: res.data.cars\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    getUsersBookings() {\n        const userDetails = UserServiceApi.getLoggedInUserDetails();\n        BookingServiceApi.getUserBookings(userDetails.id)\n            .then(res => {\n                this.setState({\n                    // sort bookings by latest\n                    bookings: res.data.bookings.reverse()\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    checkBookingPast(pickupTime) {\n        // check if booking pickup time hjas passed current time\n        let currentTime = new Date();\n        currentTime.setMinutes(currentTime.getMinutes() - currentTime.getTimezoneOffset());\n        return new Date(pickupTime) > currentTime;\n    }\n\n    handleCancelButton(booking) {\n        booking.status = 'Cancelled';\n        BookingServiceApi.modifyBooking(booking)\n            .then(() => {\n                this.getUsersBookings();\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error obtaining bookings!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>My Bookings</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Booking ID</th>\n                            <th>Booked Time</th>\n                            <th>Pickup Time</th>\n                            <th>Return Time</th>\n                            <th>Bus</th>\n                            <th>Cost</th>\n                            <th>Location</th>\n                            <th>Address</th>\n                            <th>Destination</th>\n                            <th>Status</th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.bookings.map(booking =>\n                            <tr>\n                                <td>{booking.id}</td>\n                                <td>{booking.bookedtime}</td>\n                                <td>{booking.pickuptime}</td>\n                                <td>{booking.returntime}</td>\n                                <td>\n                                    {this.state.cars.map(car =>\n                                        <>\n                                            {car.id === booking.car &&\n                                                <>\n                                                    {car.make}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>${booking.cost}</td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    {location.name}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    {location.address}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>\n                                    {this.state.destinations.map(destination =>\n                                        <>\n                                            {destination.id === booking.destination &&\n                                                <>\n                                                    {destination.address}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>{booking.status}</td>\n                                <td>\n                                    <Button href={`/mybookings/${booking.id}`}>View</Button>\n                                </td>\n                                {(booking.status === \"Confirmed\" && this.checkBookingPast(booking.pickuptime)) &&\n                                    <td>\n                                        <Button variant=\"danger\" onClick={() => this.handleCancelButton(booking)}>Cancel</Button>\n                                    </td>\n                                }\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n\nexport default MyBookingPage;\n","/* Bookings details page */\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Alert, Button, Col } from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\n\nclass BookingDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: {},\n            destination: {},\n            booking: {},\n            car: {},\n            errorMessage: '',\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n        this.handleCancelButton = this.handleCancelButton.bind(this);\n        this.getBookingDetails = this.getBookingDetails.bind(this);\n        this.checkBookingPast = this.checkBookingPast.bind(this);\n    }\n\n    getBookingDetails() {\n        // obtain a user's booking by booking id and also car and location associated\n        BookingServiceApi.getUserBooking(this.props.match.params.id)\n            .then(res => {\n                this.setState({\n                    booking: res.data.booking\n                });\n                CarServiceApi.getCar(this.state.booking.car)\n                    .then(res => {\n                        this.setState({\n                            car: res.data.car\n                        })\n                    });\n                LocationServiceApi.getLocationFromId(this.state.booking.location)\n                    .then(res => {\n                        LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                            .then(newRes => {\n                                // Create object with address, latitude and longitude\n                                let locationObject = {\n                                    id: res.data._id,\n                                    address: res.data.address,\n                                    name: res.data.name,\n                                    lat: newRes.data.results[0].geometry.location.lat,\n                                    lng: newRes.data.results[0].geometry.location.lng,\n                                    cars: res.data.cars\n                                };\n                                // set new location object to react state array\n                                this.setState({\n                                    location: locationObject,\n                                    isLoading: true\n                                });\n                            });\n                    });\n                LocationServiceApi.getLocationFromId(this.state.booking.destination)\n                    .then(res => {\n                        LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                            .then(newRes => {\n                                let destinationObject = {\n                                    id: res.data._id,\n                                    address: res.data.name,\n                                    name: res.data.name,\n                                    lat: newRes.data.results[0].geometry.location.lat,\n                                    lng: newRes.data.results[0].geometry.location.lng,\n                                    cars: res.data.cars\n                                };\n\n                                this.setState({\n                                    destination: destinationObject,\n                                    isLoading: true\n                                });\n                            });\n                    })\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            })\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    componentDidMount() {\n        this.getBookingDetails();\n    }\n\n    handleCancelButton() {\n        // modify booking status to cancelled\n        let booking = this.state.booking;\n        booking.status = 'Cancelled';\n        booking.id = booking._id;\n        this.setState({\n            booking: booking\n        });\n        BookingServiceApi.modifyBooking(this.state.booking)\n            .then(() => {\n                this.getBookingDetails()\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    checkBookingPast(pickupTime) {\n        // check if booking pickup time has past current time\n        let currentTime = new Date();\n        currentTime.setMinutes(currentTime.getMinutes() - currentTime.getTimezoneOffset());\n        return new Date(pickupTime) > currentTime;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Booking details</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error obtaining booking!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                {!this.state.errorMessage &&\n                    <>\n                        {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\n                            <Map google={this.props.google}\n                                initialCenter={{\n                                    lat: this.state.location.lat,\n                                    lng: this.state.location.lng\n                                }}\n                                style={{ height: '400px', width: '400px' }}\n                                zoom={14}\n                                onClick={this.mapOnMapClick}>\n\n                                <Marker\n                                    id={this.state.location.id}\n                                    name={this.state.location.name}\n                                    address={this.state.location.address}\n                                    onClick={this.mapOnMarkerClick}\n                                    position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                                />\n\n                                <InfoWindow\n                                    onClose={this.onInfoWindowClose}\n                                    marker={this.state.activeMarker}\n                                    visible={this.state.showingInfoWindow}>\n                                    <div id=\"info-window\">\n                                        <h2>{this.state.selectedPlace.name}</h2>\n                                        <p>{this.state.selectedPlace.address}</p>\n                                        <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                                    </div>\n                                </InfoWindow>\n                            </Map>\n                        </div>}\n                        <b>Booking ID: </b> {this.state.booking._id} <br></br>\n                        <b>Booking time: </b> {this.state.booking.bookedtime} <br></br>\n                        <b>Pickup time: </b> {this.state.booking.pickuptime} <br></br>\n                        <b>Return time: </b> {this.state.booking.returntime} <br></br>\n                        <b>Cost: </b> ${this.state.booking.cost} <br></br>\n                        <b>Location: </b> {this.state.location.name} <br></br>\n                        <b>Destination: </b>{this.state.destination.name} <br></br>\n                        <b>Address: </b> {this.state.location.address} <br></br>\n                        <b>Status: </b> {this.state.booking.status} <br></br>\n                        {(this.state.booking.status === \"Confirmed\" && this.checkBookingPast(this.state.booking.pickuptime)) &&\n                            <Button variant=\"danger\" onClick={this.handleCancelButton}>Cancel</Button>\n                        }\n                        <Col sm={4}>\n                            <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n                                <img src={this.state.car.image} alt=\"car\" width=\"100\" />\n                                <h2 style={{ marginTop: '1vh' }}>{this.state.car.make}</h2>\n                                <p>{this.state.car.fueltype}, {this.state.car.bodytype}, {this.state.car.seats} seaters, {this.state.car.colour}</p>\n                                <h5>Number Plate: {this.state.car.numberplate}</h5>\n                                <p><b>Bus ID: </b>{this.state.car._id}</p>\n                            </div>\n                        </Col>\n                    </>\n                }\n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms\"\n})(BookingDetailsPage);\n","/* My profile page for customers */\nimport React, { Component } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nconst { default: UserServiceApi } = require(\"../api/UserServiceApi\");\n\nclass MyProfilePage extends Component {\n    render() {\n        const userData = UserServiceApi.getLoggedInUserDetails();\n        return (\n            <Container>\n                <h2>My Profile</h2>\n                <strong>First name: </strong>{userData.firstname} <br></br>\n                <strong>Last name: </strong>{userData.lastname} <br></br>\n                <strong>Email: </strong>{userData.email} <br></br>\n                <strong>Customer ID: </strong>{userData.id} <br></br>\n                <Button href='/mybookings'>View My Bookings</Button>\n            </Container>\n        )\n    }\n}\n\nexport default MyProfilePage;\n","/* Staff overview page */\nimport React, { Component } from 'react';\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\n\nexport default class overview extends Component {\n    render() {\n        const userData = UserServiceApi.getLoggedInUserDetails();\n        return (\n            <div className=\"container\">\n                <h2>My Profile</h2>\n                <strong>First name: </strong>{userData.firstname} <br></br>\n                <strong>Last name: </strong>{userData.lastname} <br></br>\n                <strong>Email: </strong>{userData.email} <br></br>\n                <strong>Staff ID: </strong>{userData.id} <br></br>\n                <strong>Staff type: </strong>{userData.usertype} <br></br>\n            </div>\n        )\n    }\n}\n","/* Admin sign up page */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\nimport UserServiceApi from '../../api/UserServiceApi.js'\n\nclass AdminSignUpPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstname: '',\n            lastname: '',\n            email: '',\n            password: '',\n            usertype: '',\n            errorMessage: '',\n            successMessage: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /* Set react state for each input when user inputs something on signup form */\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        // generate new user object\n        let newUser = {\n            firstname: this.state.firstname.trim(),\n            lastname: this.state.lastname.trim(),\n            email: this.state.email,\n            password: this.state.password,\n            usertype: this.state.usertype\n        };\n        // input validation\n        if (this.state.firstname === '') {\n            return this.setState({ errorMessage: \"First name can't be empty!\" });\n        }\n        if (this.state.lastname === '') {\n            return this.setState({ errorMessage: \"Last name can't be empty!\" });\n        }\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!emailRegex.test(String(this.state.email).toLowerCase())) {\n            return this.setState({ errorMessage: \"Please enter a valid email!\" });\n        }\n        // publish create user request to backend\n        UserServiceApi.createNewUser(newUser).then(() => {\n            this.setState({\n                successMessage: 'User has been created!',\n                errorMessage: ''\n            });\n        }).catch((error) => {\n            // display error if there's any\n            this.setState({ errorMessage: error.response.data.message });\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Create Account</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Sign up failed!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                {this.state.successMessage && <Alert variant=\"success\">\n                    <Alert.Heading>Account created!</Alert.Heading>\n                    <p>\n                        {this.state.successMessage}\n                    </p>\n                </Alert>}\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\n                        <Form.Label column sm={2}>\n                            First Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"firstname\" type=\"firstname\" placeholder=\"First Name\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalLastName\">\n                        <Form.Label column sm={2}>\n                            Last Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"lastname\" type=\"lastname\" placeholder=\"Last Name\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={2}>\n                            Password\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"password\" type=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain: at least one number, one uppercase, lowercase letter, and at least 8 or more characters\" placeholder=\"Password\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalUserType\">\n                        <Form.Label column sm={2}>Account Type</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"usertype\" as=\"select\" onChange={this.handleChange} required>\n                                <option disabled selected>Select account type</option>\n                                <option>customer</option>\n                                <option>staff</option>\n                                <option>admin</option>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit}>Create Account</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n\n            </div>\n        )\n    }\n}\n\nexport default AdminSignUpPage;\n","/* Create car page */\nimport React, { Component } from 'react';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport { CAR_COLOURS, CAR_BODY_TYPES, CAR_FUEL_TYPES, CAR_SEATS, FILE_UPLOAD_LIMIT } from '../../Constants.js';\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\n\nexport default class createCar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            make: '',\n            seats: '',\n            bodytype: '',\n            numberplate: '',\n            colour: '',\n            costperhour: '',\n            fueltype: '',\n            location: '',\n            locationList: [],\n            disableSubmit: false,\n            successMsg: '',\n            errMsg: '',\n            b64photo: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFile = this.handleFile.bind(this);\n    }\n\n    resetState = () => {\n        this.setState({\n            make: '',\n            seats: '',\n            bodytype: '',\n            numberplate: '',\n            colour: '',\n            costperhour: '',\n            fueltype: '',\n            location: '',\n            b64photo: ''\n        });\n    }\n\n    handleFile = (event) => {\n        // handle image uploaded for car\n        let files = event.target.files;\n        if (files !== null) {\n            // file size validation\n            if (event.target.files[0].size > FILE_UPLOAD_LIMIT) {\n                return this.setState({\n                    errMsg: 'Image exceeded upload size limit! Please try again with another image.'\n                });\n            }\n            let reader = new FileReader();\n            reader.readAsDataURL(files[0]);\n            reader.onload = (event) => {\n                this.setState({\n                    b64photo: event.target.result,\n                    errMsg: ''\n                });\n            }\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    inputValidation = () => {\n        const { make, seats, bodytype, numberplate,\n            colour, costperhour, fueltype, location, b64photo } = this.state;\n\n        if (make === '' || seats === '' || bodytype === '' || numberplate === ''\n            || colour === '' || costperhour === '' || fueltype === '' || location === '' || b64photo === '') {\n            this.setState({\n                errMsg: \"Please fill in everything\"\n            });\n            return false;\n        }\n        else {\n            this.setState({\n                errMsg: \"\"\n            })\n            return true;\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (!this.inputValidation()) {\n            return;\n        }\n        this.setState({\n            disableSubmit: true\n        })\n        // generate a new car object\n        const newCar = {\n            make: this.state.make.trim(),\n            seats: this.state.seats,\n            bodytype: this.state.bodytype,\n            numberplate: this.state.numberplate.trim(),\n            colour: this.state.colour,\n            costperhour: this.state.costperhour,\n            fueltype: this.state.fueltype,\n            location: this.state.location,\n            b64photo: this.state.b64photo\n        };\n        // publish car object to backend\n        CarServiceApi.createNewCar(newCar).then((res) => {\n            this.setState({\n                disableSubmit: false,\n                successMsg: \"Successfully added car\",\n                errMsg: \"\"\n            });\n        }, (err) => {\n            this.setState({\n                disableSubmit: false,\n                successMsg: \"\",\n                errMsg: err.response.data.message\n            });\n            console.log(err.response);\n        })\n    }\n\n    componentDidMount() {\n        LocationServiceApi.getAllLocations().then((res) => {\n            res.data.map(location => this.setState({ locationList: this.state.locationList.concat(location.address) }));\n        }, (err) => {\n            console.log(err.response);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Create Bus</h2>\n                {this.state.errMsg &&\n                    <Alert variant=\"danger\">\n                        <Alert.Heading>Add bus failed!</Alert.Heading>\n                        <p>\n                            {this.state.errMsg}\n                        </p>\n                    </Alert>\n                }\n\n                {this.state.successMsg &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>Add bus succeed!</Alert.Heading>\n                        <p>\n                            {this.state.successMsg}\n                        </p>\n                    </Alert>\n                }\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalMake\">\n                        <Form.Label column sm={2}>\n                            Make\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"make\" type=\"make\" placeholder=\"Bus Make\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalSeats\">\n                        <Form.Label column sm={2}>\n                            Seats\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"seats\" type=\"seats\" onChange={this.handleChange} required>\n                                <option disabled selected>Select seat number</option>\n                                {\n                                    CAR_SEATS.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalBodyType\">\n                        <Form.Label column sm={2}>\n                            Body type\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"bodytype\" type=\"bodytype\" onChange={this.handleChange} required>\n                                <option disabled selected>Select body type</option>\n                                {\n                                    CAR_BODY_TYPES.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalNumberPlate\">\n                        <Form.Label column sm={2}>\n                            Number Plate\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"numberplate\" type=\"numberplate\" placeholder=\"Enter plate number\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalColour\">\n                        <Form.Label column sm={2}>\n                            Colour\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"colour\" type=\"colour\" onChange={this.handleChange} required>\n                                <option disabled selected>Select colour</option>\n                                {\n                                    CAR_COLOURS.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalCostPerHour\">\n                        <Form.Label column sm={2}>\n                            Cost per hour\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"costperhour\" type=\"number\" placeholder=\"Select cost per hour\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalFuelType\">\n                        <Form.Label column sm={2}>\n                            Fuel type\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"fueltype\" type=\"fueltype\" onChange={this.handleChange} required>\n                                <option disabled selected>Select fuel type</option>\n                                {\n                                    CAR_FUEL_TYPES.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLocation\">\n                        <Form.Label column sm={2}>\n                            Location\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"location\" type=\"location\" onChange={this.handleChange} required>\n                                <option disabled selected>Select location</option>l\n                                {\n                                    this.state.locationList.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLocation\">\n                        <Form.Label column sm={2}>\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.File\n                                id=\"custom-file\"\n                                label=\"Bus Image (4MB max)\"\n                                name=\"b64photo\"\n                                accept=\"image/*\"\n                                onChange={this.handleFile}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Create Bus</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n","/* Create location page */\nimport React, { Component } from 'react'\nimport LocationServiceApi from '../../api/LocationServiceApi'\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\nimport PlacesAutocomplete from 'react-places-autocomplete';\n\nexport default class CreateLocation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            address: '',\n            errMsg: '',\n            gmapsLoaded: false,\n            disableSubmit: false,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleAutocomplete = this.handleAutocomplete.bind(this);\n    }\n\n    initMap = () => {\n        this.setState({\n            gmapsLoaded: true,\n        });\n    }\n\n    handleAutocomplete = address => {\n        this.setState({ address });\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = event => {\n        // create new location handler\n        const { name, address } = this.state;\n        event.preventDefault();\n\n        this.setState({\n            successMsg: \"\",\n            errMsg: \"\",\n            disableSubmit: true\n        });\n\n        // input validation\n        if (name === '' || address === '') {\n            this.setState({\n                errMsg: \"name and address cannot be empty\",\n                disableSubmit: false\n            });\n        } else {\n            // create new location object\n            let newLoc = {\n                name: name.trim(),\n                address: address\n            };\n            // publish location object to backend\n            LocationServiceApi.createNewLocation(newLoc).then(res => {\n                console.log(res.data)\n                this.setState({\n                    successMsg: \"Location successfully added\",\n                    disableSubmit: false,\n                    name: '',\n                    address: ''\n                });\n            }, error => {\n                this.setState({\n                    errMsg: error.response.data.message,\n                    disableSubmit: false\n                });\n            });\n        }\n    }\n\n    componentDidMount() {\n        // initialise address autocomplete api\n        window.initMap = this.initMap;\n        const gmapScriptEl = document.createElement(`script`);\n        gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms&libraries=places&callback=initMap`;\n        document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Create Location</h2>\n                {this.state.errMsg &&\n                    <Alert variant=\"danger\">\n                        <Alert.Heading>Add location failed!</Alert.Heading>\n                        <p>\n                            {this.state.errMsg}\n                        </p>\n                    </Alert>\n                }\n\n                {this.state.successMsg &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>Add location succeed!</Alert.Heading>\n                        <p>\n                            {this.state.successMsg}\n                        </p>\n                    </Alert>\n                }\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\n                        <Form.Label column sm={2} required>\n                            Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"name\" type=\"name\" placeholder=\"Location Name\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\n                        <Form.Label column sm={2}>\n                            Enter Address\n                        </Form.Label>\n                        <Col sm={10}>\n                            {this.state.gmapsLoaded &&\n                                <PlacesAutocomplete\n                                    value={this.state.address}\n                                    onChange={this.handleAutocomplete}\n                                    onSelect={this.handleSelect}\n                                >\n                                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                        <div>\n                                            <Form.Control\n                                                {...getInputProps({\n                                                    placeholder: 'Search Places ...',\n                                                    className: 'location-search-input',\n                                                    required: true\n                                                })}\n                                            />\n                                            <div className=\"autocomplete-dropdown-container\">\n                                                {loading && <div>Loading...</div>}\n                                                {suggestions.map(suggestion => {\n                                                    const className = suggestion.active\n                                                        ? 'suggestion-item--active'\n                                                        : 'suggestion-item';\n                                                    // inline style for demonstration purpose\n                                                    const style = suggestion.active\n                                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                                    return (\n                                                        <div\n                                                            {...getSuggestionItemProps(suggestion, {\n                                                                className,\n                                                                style,\n                                                            })}\n                                                        >\n                                                            <span>{suggestion.description}</span>\n                                                        </div>\n                                                    );\n                                                })}\n                                            </div>\n                                        </div>\n                                    )}\n                                </PlacesAutocomplete>\n                            }\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Create Location</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n","/* View all customers page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Table, Container } from 'react-bootstrap';\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\n\nexport default class ViewAllCustomersPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customers: [],\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // fetch all customers\n        UserServiceApi.getAllCustomers().then(res => {\n            this.setState({\n                customers: res.data.customers.reverse()\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error obtaining customers!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>View All Customers</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Customer ID</th>\n                            <th>First name</th>\n                            <th>Last name</th>\n                            <th>Email</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.customers.map(customer =>\n                            <tr>\n                                <td>{customer.id}</td>\n                                <td>{customer.firstname}</td>\n                                <td>{customer.lastname}</td>\n                                <td>{customer.email}</td>\n                                <td><Button href={`/admin/view/customers/${customer.id}`}>View</Button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n","/* View customer page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Container, ButtonGroup } from 'react-bootstrap';\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\n\nexport default class ViewCustomerPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customer: {},\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // fetch customer by id\n        UserServiceApi.getUserFromId(this.props.match.params.id).then(res => {\n            this.setState({\n                customer: res.data.user\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error fetching customer details!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>Customer Details</h2>\n                <strong>Customer ID:</strong> {this.state.customer._id} <br></br>\n                <strong>First name:</strong> {this.state.customer.firstname} <br></br>\n                <strong>Last name:</strong> {this.state.customer.lastname} <br></br>\n                <strong>Email:</strong> {this.state.customer.email} <br></br>\n                <ButtonGroup style={{ marginTop: '3vh' }}>\n                    <Button href={`/admin/view/customers/${this.state.customer._id}/bookings`}>View Customer's Bookings</Button>\n                    <Button href={`/admin/modify/customers/${this.state.customer._id}`}>Modify Customer Details</Button>\n                </ButtonGroup>\n            </Container>\n        )\n    }\n}\n","/* Modify customer details page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Form, Col, Row } from 'react-bootstrap';\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\n\nexport default class ModifyCustomerDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customer: {},\n            firstname: '',\n            lastname: '',\n            email: '',\n            fetchErrorMessage: '',\n            modifyErrorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // fetch user by id\n        UserServiceApi.getUserFromId(this.props.match.params.id).then(res => {\n            this.setState({\n                firstname: res.data.user.firstname,\n                lastname: res.data.user.lastname,\n                email: res.data.user.email,\n                id: res.data.user._id,\n                customer: res.data.user\n            });\n        }).catch((error) => {\n            this.setState({ fetchErrorMessage: error.response.data.message });\n        });\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n        // modify customer details handler\n        event.preventDefault();\n        let modifiedCustomer = this.state.customer;\n        // input validation\n        if (this.state.firstname.trim() !== '')\n            modifiedCustomer.firstname = this.state.firstname.trim();\n        else\n            return this.setState({ modifyErrorMessage: \"First name shall not be empty\" });\n        if (this.state.lastname.trim() !== '')\n            modifiedCustomer.lastname = this.state.lastname.trim();\n        else\n            return this.setState({ modifyErrorMessage: \"Last name shall not be empty\" });\n        if (this.state.email.trim() !== '') {\n            let checkEmailExistsPayload = {\n                email: this.state.email.trim()\n            }\n            // check if modified email exists\n            UserServiceApi.checkEmailExists(checkEmailExistsPayload).then(res => {\n                if (!(res.data.exist) || (this.state.email === this.state.customer.email)) {\n                    modifiedCustomer.email = this.state.email.trim();\n                    // publish modified customer to backend\n                    UserServiceApi.updateUser(modifiedCustomer).then(res => {\n                        return window.location.href = `/admin/view/customers/${this.state.customer._id}`;\n                    }).catch((error) => {\n                        return this.setState({ modifyErrorMessage: error.response.data.message });\n                    })\n                } else {\n                    return this.setState({ modifyErrorMessage: \"Email already exists! Please revert or try another one.\" });\n                }\n            }).catch(() => {\n                return this.setState({ modifyErrorMessage: \"Error checking if email exists!\" });\n            })\n        }\n        else\n            return this.setState({ modifyErrorMessage: \"Email shall not be empty\" });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {this.state.fetchErrorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error fetching customer details!</Alert.Heading>\n                    <p>\n                        {this.state.fetchErrorMessage}\n                    </p>\n                </Alert>}\n                {this.state.modifyErrorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error modifying customer details!</Alert.Heading>\n                    <p>\n                        {this.state.modifyErrorMessage}\n                    </p>\n                </Alert>}\n                <h2>Modify Customer Details</h2>\n                <strong>Customer ID:</strong> {this.state.customer._id} <br></br>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\n                        <Form.Label column sm={2}>\n                            First Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"firstname\" type=\"text\" value={this.state.firstname} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLastName\">\n                        <Form.Label column sm={2}>\n                            Last Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"lastname\" type=\"text\" value={this.state.lastname} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit}>Modify User</Button>\n                            <Button variant=\"danger\" href={`/admin/view/customers/${this.state.customer._id}`}>Cancel</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n","/* View all bookings page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Table, Container } from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nconst { default: LocationServiceApi } = require(\"../../api/LocationServiceApi\");\nconst { default: CarServiceApi } = require(\"../../api/CarServiceApi\");\n\nexport default class ViewAllBookingsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            locations: [],\n            cars: [],\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // obtain all bookings, locations and cars for rendering\n        BookingServiceApi.getAllBookings().then(res => {\n            this.setState({\n                // sort bookings by latest\n                bookings: res.data.bookings.reverse()\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n        LocationServiceApi.getAllLocations()\n            .then(res => {\n                let locationArray = this.state.locations;\n                res.data.forEach(location => {\n                    let locationObject = {\n                        id: location._id,\n                        address: location.address,\n                        name: location.name\n                    };\n                    locationArray.push(locationObject);\n                    this.setState({ locations: locationArray });\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            })\n        CarServiceApi.getAllCars()\n            .then(res => {\n                this.setState({\n                    cars: res.data.cars\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error fetching all bookings!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>View All Bookings</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Booking ID</th>\n                            <th>User ID</th>\n                            <th>Booked Time</th>\n                            <th>Pickup Time</th>\n                            <th>Return Time</th>\n                            <th>Car ID</th>\n                            <th>Cost</th>\n                            <th>Location</th>\n                            <th>Address</th>\n                            <th>Status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.bookings.map(booking =>\n                            <tr>\n                                <td>{booking.id}</td>\n                                <td><a href={`/admin/view/customers/${booking.user}`}>{booking.user}</a></td>\n                                <td>{booking.bookedtime}</td>\n                                <td>{booking.pickuptime}</td>\n                                <td>{booking.returntime}</td>\n                                <td>\n                                    {this.state.cars.map(car =>\n                                        <>\n                                            {car.id === booking.car &&\n                                                <>\n                                                    <a href={`/admin/view/cars/${booking.car}`}>{car.make}</a>\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>${booking.cost}</td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    <a href={`/admin/view/location/${booking.location}`}>{location.name}</a>\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    {location.address}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>{booking.status}</td>\n                                <td>\n                                    <Button href={`/admin/view/bookings/${booking.id}`}>View</Button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n","/* View booking page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Container, Col } from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nconst { default: LocationServiceApi } = require(\"../../api/LocationServiceApi\");\nconst { default: CarServiceApi } = require(\"../../api/CarServiceApi\");\n\nclass ViewBookingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            booking: {},\n            car: {},\n            location: {},\n            errorMessage: '',\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n        this.handleCancelButton = this.handleCancelButton.bind(this);\n    }\n\n    getBookingDetails() {\n        // get booking details by id, also fetch required elements\n        BookingServiceApi.getBooking(this.props.match.params.id)\n            .then(res => {\n                this.setState({\n                    booking: res.data.booking\n                });\n                CarServiceApi.getCar(this.state.booking.car)\n                    .then(res => {\n                        this.setState({\n                            car: res.data.car\n                        });\n                    });\n                LocationServiceApi.getLocationFromId(this.state.booking.location)\n                    .then(res => {\n                        LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                            .then(newRes => {\n                                // Create object with address, latitude and longitude\n                                let locationObject = {\n                                    id: res.data._id,\n                                    address: res.data.address,\n                                    name: res.data.name,\n                                    lat: newRes.data.results[0].geometry.location.lat,\n                                    lng: newRes.data.results[0].geometry.location.lng,\n                                    cars: res.data.cars\n                                };\n                                // set new location object to react state array\n                                this.setState({\n                                    location: locationObject,\n                                    isLoading: true\n                                });\n                            });\n                    });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    componentDidMount() {\n        this.getBookingDetails();\n    }\n\n    handleCancelButton() {\n        // change booking status to cancelled\n        let booking = this.state.booking;\n        booking.status = 'Cancelled';\n        booking.id = booking._id;\n        this.setState({\n            booking: booking\n        });\n        // update booking object in backend\n        BookingServiceApi.modifyBooking(this.state.booking)\n            .then(() => {\n                this.getBookingDetails();\n            });\n    }\n\n    checkBookingPast(pickupTime) {\n        // check if booking pickup time has past current time\n        let currentTime = new Date();\n        currentTime.setMinutes(currentTime.getMinutes() - currentTime.getTimezoneOffset());\n        return new Date(pickupTime) > currentTime;\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>Booking details</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error obtaining booking!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\n                    <Map google={this.props.google}\n                        initialCenter={{\n                            lat: this.state.location.lat,\n                            lng: this.state.location.lng\n                        }}\n                        style={{ height: '400px', width: '400px' }}\n                        zoom={14}\n                        onClick={this.mapOnMapClick}>\n\n                        <Marker\n                            id={this.state.location.id}\n                            name={this.state.location.name}\n                            address={this.state.location.address}\n                            onClick={this.mapOnMarkerClick}\n                            position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                        />\n\n                        <InfoWindow\n                            onClose={this.onInfoWindowClose}\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}>\n                            <div id=\"info-window\">\n                                <h2>{this.state.selectedPlace.name}</h2>\n                                <p>{this.state.selectedPlace.address}</p>\n                                <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                </div>}\n                {!this.state.errorMessage &&\n                    <>\n                        <b>Booking ID: </b> {this.state.booking._id} <br></br>\n                        <b>Booking time: </b> {this.state.booking.bookedtime} <br></br>\n                        <b>Pickup time: </b> {this.state.booking.pickuptime} <br></br>\n                        <b>Return time: </b> {this.state.booking.returntime} <br></br>\n                        <b>Cost: </b> ${this.state.booking.cost} <br></br>\n                        <b>Location: </b> <a href={`/admin/view/location/${this.state.location.id}`}>{this.state.location.name}</a> <br></br>\n                        <b>Address: </b> {this.state.location.address} <br></br>\n                        <b>Status: </b> {this.state.booking.status} <br></br>\n                        {(this.state.booking.status === \"Confirmed\" && this.checkBookingPast(this.state.booking.pickuptime)) &&\n                            <Button variant=\"danger\" onClick={this.handleCancelButton}>Cancel</Button>\n                        }\n                        <Col sm={4}>\n                            <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n                                <img src={this.state.car.image} alt=\"car\" width=\"100\" />\n                                <h2 style={{ marginTop: '1vh' }}>{this.state.car.make}</h2>\n                                <p>{this.state.car.fueltype}, {this.state.car.bodytype}, {this.state.car.seats} seaters, {this.state.car.colour}</p>\n                                <h5>${this.state.car.costperhour} per hour</h5>\n                                <h5>Number Plate: {this.state.car.numberplate}</h5>\n                                <a href={`/admin/view/cars/${this.state.car._id}`}><b>Bus ID: </b>{this.state.car._id}</a>\n                            </div>\n                        </Col>\n                    </>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    // apiKey: process.env.REACT_APP_API_KEY\n    apiKey: \"AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms\"\n})(ViewBookingPage);\n","/* View customer bookings page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Table } from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nconst { default: LocationServiceApi } = require(\"../../api/LocationServiceApi\");\nconst { default: CarServiceApi } = require(\"../../api/CarServiceApi\");\n\nexport default class ViewCustomerBookingsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            locations: [],\n            cars: [],\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // get all of customer's bookings details by user id and also required elements\n        BookingServiceApi.getUserBookings(this.props.match.params.id).then(res => {\n            this.setState({\n                // sort bookings by latest\n                bookings: res.data.bookings.reverse()\n            })\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        })\n        LocationServiceApi.getAllLocations()\n            .then(res => {\n                let locationArray = this.state.locations;\n                res.data.forEach(location => {\n                    let locationObject = {\n                        id: location._id,\n                        address: location.address,\n                        name: location.name\n                    };\n                    locationArray.push(locationObject);\n                    this.setState({ locations: locationArray });\n                })\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n        CarServiceApi.getAllCars()\n            .then(res => {\n                this.setState({\n                    cars: res.data.cars\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error fetching customer's bookings!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>Bookings for Customer {this.props.match.params.id}</h2>\n                <Button href={`/admin/view/customers/${this.props.match.params.id}`}>View Customer Profile</Button>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Booking ID</th>\n                            <th>Booked Time</th>\n                            <th>Pickup Time</th>\n                            <th>Return Time</th>\n                            <th>Car</th>\n                            <th>Cost</th>\n                            <th>Location</th>\n                            <th>Address</th>\n                            <th>Status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.bookings.map(booking =>\n                            <tr>\n                                <td>{booking.id}</td>\n                                <td>{booking.bookedtime}</td>\n                                <td>{booking.pickuptime}</td>\n                                <td>{booking.returntime}</td>\n                                <td>\n                                    {this.state.cars.map(car =>\n                                        <>\n                                            {car.id === booking.car &&\n                                                <>\n                                                    <a href={`/admin/view/cars/${booking.car}`}>{car.make}</a>\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>${booking.cost}</td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    <a href={`/admin/view/location/${booking.location}`}>{location.name}</a>\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    {location.address}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>{booking.status}</td>\n                                <td>\n                                    <Button href={`/admin/view/bookings/${booking.id}`}>View</Button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n","/* View all cars page */\nimport React, { Component } from 'react';\nimport { Container, Table, Alert } from 'react-bootstrap';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport { withRouter } from 'react-router-dom';\n\nclass ViewAllCars extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cars: [],\n            errorMessage: ''\n        };\n        this.viewCarDetails = this.viewCarDetails.bind(this);\n    }\n\n    viewCarDetails(id) {\n        this.props.history.push(`/admin/view/cars/${id}`);\n    }\n\n    componentDidMount() {\n        // fetch all cars\n        CarServiceApi.getAllCars().then(res => {\n            res.data.cars.forEach(car => {\n                // fetch location details for each car\n                LocationServiceApi.getLocationFromId(car.location).then(res => {\n                    car.location = res.data.name;\n                    car.locationId = res.data._id;\n                    this.state.cars.push(car);\n                    this.setState({\n                        cars: this.state.cars\n                    });\n                });\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>All cars, click row to view/modify.</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error Getting all cars!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>make</th>\n                            <th>seats</th>\n                            <th>body type</th>\n                            <th>number plate</th>\n                            <th>colour</th>\n                            <th>cost per hour</th>\n                            <th>fuel type</th>\n                            <th>location</th>\n                            <th>image</th>\n                            <th>current booking</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.cars.map(car =>\n                                <tr style={{ 'cursor': 'pointer' }} key={car.id} onClick={() => this.viewCarDetails(car.id)}>\n                                    <td>{car.id}</td>\n                                    <td>{car.make}</td>\n                                    <td>{car.seats}</td>\n                                    <td>{car.bodytype}</td>\n                                    <td>{car.numberplate}</td>\n                                    <td>{car.colour}</td>\n                                    <td>{car.costperhour}</td>\n                                    <td>{car.fueltype}</td>\n                                    <td>{car.location}</td>\n                                    <td><img alt=\"car\" src={car.image} width={50} /></td>\n                                    <td>{(car.currentbooking === null) ? \"No booking\" : car.currentbooking}</td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(ViewAllCars);\n","/* Modify car details page */\nimport React, { Component } from 'react'\nimport { Container, Button, Alert, Table, Form, Col, Row } from 'react-bootstrap'\nimport CarServiceApi from '../../api/CarServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport { CAR_COLOURS, CAR_BODY_TYPES, CAR_FUEL_TYPES, CAR_SEATS, FILE_UPLOAD_LIMIT } from '../../Constants.js';\n\nexport default class ModifyCarDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            car: '',\n            locationList: [],\n            make: '',\n            seats: '',\n            bodytype: '',\n            numberplate: '',\n            colour: '',\n            costperhour: '',\n            fueltype: '',\n            location: '',\n            b64photo: '',\n            errMsg: '',\n            successMsg: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFile = this.handleFile.bind(this);\n    }\n\n    handleFile = (event) => {\n        // handle file upload for car image\n        let files = event.target.files;\n        if (files !== null) {\n            // file size validation\n            if (event.target.files[0].size > FILE_UPLOAD_LIMIT) {\n                return this.setState({\n                    errMsg: 'Image exceeded upload size limit! Please try again with another image.'\n                });\n            }\n            let reader = new FileReader();\n            reader.readAsDataURL(files[0]);\n            reader.onload = (event) => {\n                this.setState({\n                    b64photo: event.target.result,\n                    errMsg: ''\n                });\n            };\n        }\n    }\n\n    inputValidation = () => {\n        const { make, seats, bodytype, numberplate,\n            colour, costperhour, fueltype, location, b64photo } = this.state;\n\n        if (make === '' || seats === '' || bodytype === '' || numberplate === ''\n            || colour === '' || costperhour === '' || fueltype === '' || location === '' || b64photo === '') {\n            this.setState({\n                errMsg: \"Please fill in everything\"\n            });\n            return false;\n        }\n        else {\n            this.setState({\n                errMsg: \"\"\n            });\n            return true;\n        }\n    }\n\n    handleSubmit(event) {\n        // modify car details handler\n        event.preventDefault();\n        if (!this.inputValidation()) {\n            return;\n        }\n        const { car } = this.state;\n        this.setState({\n            disableSubmit: true,\n        });\n        // create car object with modified values\n        let carDetails = {\n            _id: car._id,\n            make: this.state.make,\n            seats: this.state.seats,\n            bodytype: this.state.bodytype,\n            numberplate: this.state.numberplate,\n            colour: this.state.colour,\n            costperhour: this.state.costperhour,\n            fueltype: this.state.fueltype,\n            location: this.state.location,\n            image: this.state.b64photo\n        };\n        // publish modified car object to backend\n        CarServiceApi.updateCar(carDetails).then(res => {\n            this.setState({\n                successMsg: \"Car is successfully updated\",\n                disableSubmit: false,\n                errMsg: \"\"\n            });\n            this.getCar();\n            this.scrollTop();\n        }).catch(err => {\n            this.setState({\n                errMsg: err.response.data.message,\n                disableSubmit: false,\n                successMsg: \"\"\n            });\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    scrollTop() {\n        // scroll window to top\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n    getCar() {\n        CarServiceApi.getCar(this.props.match.params.id).then(res => {\n            const car = res.data.car;\n            LocationServiceApi.getLocationFromId(car.location).then(res => {\n                car.location = res.data.address;\n                car.locationId = res.data._id;\n                this.setState({\n                    car: car,\n                    make: car.make,\n                    numberplate: car.numberplate,\n                    costperhour: car.costperhour,\n                    seats: car.seats,\n                    colour: car.colour,\n                    bodytype: car.bodytype,\n                    location: car.locationId,\n                    fueltype: car.fueltype,\n                    b64photo: car.image\n                });\n            });\n        }).catch(err => {\n            this.setState({\n                errMsg: err.response\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.getCar();\n\n        LocationServiceApi.getAllLocations().then((res) => {\n            res.data.map(location => this.setState({ locationList: this.state.locationList.concat(location) }));\n        }, (err) => {\n            this.setState({\n                errMsg: err.response\n            });\n        });\n    }\n\n    render() {\n        const { car } = this.state;\n\n        return (\n            <Container>\n                <h2>Car details:</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>make</th>\n                            <th>seats</th>\n                            <th>body type</th>\n                            <th>number plate</th>\n                            <th>colour</th>\n                            <th>cost per hour</th>\n                            <th>fuel type</th>\n                            <th>location</th>\n                            <th>image</th>\n                            <th>current booking</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr key={car._id}>\n                            <td>{car._id}</td>\n                            <td>{car.make}</td>\n                            <td>{car.seats}</td>\n                            <td>{car.bodytype}</td>\n                            <td>{car.numberplate}</td>\n                            <td>{car.colour}</td>\n                            <td>{car.costperhour}</td>\n                            <td>{car.fueltype}</td>\n                            <td>{car.location}</td>\n                            <td><img alt=\"car\" src={car.image} width={50} /></td>\n                            <td>{(car.currentbooking === null) ? \"No booking\" : car.currentbooking}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n\n                <h2>Modify details</h2>\n                {this.state.errMsg &&\n                    <Alert variant=\"danger\">\n                        <Alert.Heading>Modify car failed!</Alert.Heading>\n                        <p>\n                            {this.state.errMsg}\n                        </p>\n                    </Alert>\n                }\n\n                {this.state.successMsg &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>Modify car succeed!</Alert.Heading>\n                        <p>\n                            {this.state.successMsg}\n                        </p>\n                    </Alert>\n                }\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalMake\">\n                        <Form.Label column sm={2}>\n                            Make\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"make\" type=\"make\" value={this.state.make} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalSeats\">\n                        <Form.Label column sm={2}>\n                            Seats\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"seats\" type=\"seats\" onChange={this.handleChange} required>\n                                {\n                                    CAR_SEATS.map((option, index) => {\n                                        const bool = option === car.seats\n                                        return (\n                                            (bool) ? <option key={index} value={option} selected>{option}</option> :\n                                                <option key={index} value={option}>{option}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalBodyType\">\n                        <Form.Label column sm={2}>\n                            Body type\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"bodytype\" type=\"bodytype\" onChange={this.handleChange} required>\n                                {\n                                    CAR_BODY_TYPES.map((option, index) => {\n                                        const bool = option === car.bodytype\n                                        return (\n                                            (bool) ? <option key={index} value={option} selected>{option}</option> :\n                                                <option key={index} value={option}>{option}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalNumberPlate\">\n                        <Form.Label column sm={2}>\n                            Number Plate\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"numberplate\" type=\"numberplate\" value={this.state.numberplate} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalColour\">\n                        <Form.Label column sm={2}>\n                            Colour\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"colour\" type=\"colour\" onChange={this.handleChange} required>\n                                <option disabled selected>Select colour</option>\n                                {\n                                    CAR_COLOURS.map((option, index) => {\n                                        const bool = option === car.colour\n                                        return (\n                                            (bool) ? <option key={index} value={option} selected>{option}</option> :\n                                                <option key={index} value={option}>{option}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalCostPerHour\">\n                        <Form.Label column sm={2}>\n                            Cost per hour\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"costperhour\" type=\"number\" value={this.state.costperhour} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalFuelType\">\n                        <Form.Label column sm={2}>\n                            Fuel type\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"fueltype\" type=\"fueltype\" onChange={this.handleChange} required>\n                                <option disabled selected>Select fuel type</option>\n                                {\n                                    CAR_FUEL_TYPES.map((option, index) => {\n                                        const bool = option === car.fueltype\n                                        return (\n                                            (bool) ? <option key={index} value={option} selected>{option}</option> :\n                                                <option key={index} value={option}>{option}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLocation\">\n                        <Form.Label column sm={2}>\n                            Location\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"location\" type=\"location\" onChange={this.handleChange} required>\n                                <option disabled selected>Select location</option>l\n                                {\n                                    this.state.locationList.map((option, index) => {\n                                        const bool = option.address === car.location\n                                        return (\n                                            (bool) ? <option key={index} value={option._id} selected>{option.address}</option> :\n                                                <option key={index} value={option._id}>{option.address}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLocation\">\n                        <Form.Label column sm={2}>\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.File\n                                id=\"custom-file\"\n                                label=\"Car Image (4MB max)\"\n                                name=\"b64photo\"\n                                accept=\"image/*\"\n                                onChange={this.handleFile}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Update Car</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Container>\n        )\n    }\n}\n","/* View all locations page */\nimport React, { Component } from 'react';\nimport { Container, Table, Alert, Button } from 'react-bootstrap';\nimport LocationServiceApi from '../../api/LocationServiceApi';\n\nexport default class ViewAllLocations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locations: [],\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // get all locations\n        LocationServiceApi.getAllLocations().then(res => {\n            this.setState({\n                locations: res.data\n            });\n        }).catch(error => {\n            this.setState({\n                errorMessage: error.response\n            });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>All locations, click to view details</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error Getting all cars!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>name</th>\n                            <th>address</th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.locations.map(location =>\n                                <tr style={{ 'cursor': 'pointer' }} key={location._id}>\n                                    <td>{location._id}</td>\n                                    <td>{location.name}</td>\n                                    <td>{location.address}</td>\n                                    <td><Button href={`/admin/modify/location/${location._id}`}>Modify</Button></td>\n                                    <td><Button href={`/admin/view/location/${location._id}`}>View</Button></td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n","/* View location page */\nimport React, { Component } from 'react';\nimport { Container, Button, Alert, Table, Col, Row } from 'react-bootstrap';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport CarServiceApi from '../../api/CarServiceApi';\n\nclass ViewLocation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: '',\n            errMessage: '',\n            cars: [],\n            successMessage: '',\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.location.state !== undefined) {\n            this.setState({\n                successMessage: this.props.location.state.success\n            });\n        }\n        // fetch location details by id\n        LocationServiceApi.getLocationFromId(this.props.match.params.id).then(res => {\n            LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                .then(newRes => {\n                    // Create object with address, latitude and longitude\n                    let locationObject = {\n                        id: res.data._id,\n                        address: res.data.address,\n                        name: res.data.name,\n                        lat: newRes.data.results[0].geometry.location.lat,\n                        lng: newRes.data.results[0].geometry.location.lng,\n                        cars: res.data.cars\n                    };\n                    // set new location object to react state array\n                    this.setState({\n                        location: locationObject,\n                        isLoading: true\n                    });\n                });\n            res.data.cars.forEach(carId => {\n                CarServiceApi.getCar(carId).then(res => {\n                    this.state.cars.push(res.data.car);\n                    this.setState({\n                        cars: this.state.cars\n                    });\n                });\n            });\n        }).catch(err => {\n            this.setState({\n                errMessage: err.response\n            });\n        });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    render() {\n        const { location } = this.state;\n\n        return (\n            <Container>\n                {this.state.successMessage &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>Add bus succeed!</Alert.Heading>\n                        <p>\n                            {this.state.successMessage}\n                        </p>\n                    </Alert>\n                }\n                <h2>Location details:</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>name</th>\n                            <th>address</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{location.id}</td>\n                            <td>{location.name}</td>\n                            <td>{location.address}</td>\n                            <td><Button href={`/admin/modify/location/${location.id}`}>Modify</Button></td>\n                        </tr>\n                    </tbody>\n                </Table>\n                <Container>\n                    {this.state.isLoading && <div style={{ height: '400px' }}>\n                        <Map google={this.props.google}\n                            initialCenter={{\n                                lat: this.state.location.lat,\n                                lng: this.state.location.lng\n                            }}\n                            style={{ height: '400px', width: '50%' }}\n                            zoom={14}\n                            onClick={this.mapOnMapClick}>\n\n                            <Marker\n                                id={this.state.location.id}\n                                name={this.state.location.name}\n                                address={this.state.location.address}\n                                onClick={this.mapOnMarkerClick}\n                                position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                            />\n\n                            <InfoWindow\n                                onClose={this.onInfoWindowClose}\n                                marker={this.state.activeMarker}\n                                visible={this.state.showingInfoWindow}>\n                                <div id=\"info-window\">\n                                    <h2>{this.state.selectedPlace.name}</h2>\n                                    <p>{this.state.selectedPlace.address}</p>\n                                    <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                                </div>\n                            </InfoWindow>\n                        </Map>\n                    </div>}\n                </Container>\n                <h2>Buses here:</h2>\n                <Row>\n                    {this.state.cars.length !== 0 ? this.state.cars.map(car =>\n                        <CarDescriptionComponent car={car} />\n                    ) : <Col>Garage empty</Col>}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nfunction CarDescriptionComponent(props) {\n    // car description component card\n    const { car } = props\n    return (\n        <Col sm={4}>\n            <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n                <img src={car.image} alt=\"car\" width=\"100\" />\n                <h2 style={{ marginTop: '1vh' }}>{car.make}</h2>\n                <p>{car.fueltype}, {car.bodytype}, {car.seats} seaters, {car.colour}</p>\n                <h5>${car.costperhour} per hour</h5>\n                <h5>Number Plate: {car.numberplate}</h5>\n                <a href={`/admin/view/cars/${car._id}`}><b>Bus ID: </b>{car._id}</a>\n            </div>\n        </Col>\n    );\n}\n\nexport default GoogleApiWrapper({\n    // apiKey: process.env.REACT_APP_API_KEY\n    apiKey: \"AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms\"\n})(ViewLocation);\n","/* Modify location page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Form, Container, Col, Row } from 'react-bootstrap';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { withRouter } from 'react-router-dom';\n\nclass modifyLocationPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: '',\n            address: '',\n            name: '',\n            errMsg: '',\n            gmapsLoaded: false,\n            successMsg: '',\n            disableSubmit: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleAutocomplete = this.handleAutocomplete.bind(this);\n    }\n\n    initMap = () => {\n        this.setState({\n            gmapsLoaded: true,\n        });\n    }\n\n    handleAutocomplete = address => {\n        this.setState({ address });\n    }\n\n    componentDidMount() {\n        // initialise address autocomplete api\n        window.initMap = this.initMap;\n        const gmapScriptEl = document.createElement(`script`);\n        gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAF3TYatEpzOshnx4qtfRNuthI3j6GWUms&libraries=places&callback=initMap`;\n        document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\n        LocationServiceApi.getLocationFromId(this.props.match.params.id).then(res => {\n            this.setState({\n                address: res.data.address,\n                name: res.data.name,\n                location: res.data\n            })\n        }).catch(err => {\n            this.setState({\n                errMsg: err.response\n            })\n        })\n    }\n\n    handleSubmit() {\n        // modify location object handler\n        // input validation\n        if (this.state.name === '') {\n            this.setState({\n                errMsg: \"name can't be empty\"\n            });\n            return;\n        }\n\n        this.setState({\n            disableSubmit: true\n        });\n\n        // create modified location object\n        let location = {\n            _id: this.state.location._id,\n            name: this.state.name,\n            address: this.state.address,\n            cars: this.state.location.cars\n        };\n\n        // publish modified location object to backend\n        LocationServiceApi.updateLocation(location).then(res => {\n            this.props.history.push(`/admin/view/location/${location._id}`, { success: \"Successfully updated location\" });\n        }).catch(err => {\n            this.setState({\n                errMsg: err.response.data.message,\n                disableSubmit: false,\n                successMsg: \"\"\n            });\n        });\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>Modify Location Details</h2>\n                <strong>Location ID:</strong> {this.state.location._id} <br></br>\n\n                {this.state.errMsg &&\n                    <Alert variant=\"danger\">\n                        <Alert.Heading>Modify location failed!</Alert.Heading>\n                        <p>\n                            {this.state.errMsg}\n                        </p>\n                    </Alert>\n                }\n\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\n                        <Form.Label column sm={2}>\n                            Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\n                        <Form.Label column sm={2}>\n                            Enter Address\n                        </Form.Label>\n                        <Col sm={10}>\n                            {this.state.gmapsLoaded &&\n                                <PlacesAutocomplete\n                                    value={this.state.address}\n                                    onChange={this.handleAutocomplete}\n                                    onSelect={this.handleSelect}\n                                >\n                                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                        <div>\n                                            <Form.Control\n                                                {...getInputProps({\n                                                    placeholder: 'Search Places ...',\n                                                    className: 'location-search-input',\n                                                    required: true\n                                                })}\n                                            />\n                                            <div className=\"autocomplete-dropdown-container\">\n                                                {loading && <div>Loading...</div>}\n                                                {suggestions.map(suggestion => {\n                                                    const className = suggestion.active\n                                                        ? 'suggestion-item--active'\n                                                        : 'suggestion-item';\n                                                    // inline style for demonstration purpose\n                                                    const style = suggestion.active\n                                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                                    return (\n                                                        <div\n                                                            {...getSuggestionItemProps(suggestion, {\n                                                                className,\n                                                                style,\n                                                            })}\n                                                        >\n                                                            <span>{suggestion.description}</span>\n                                                        </div>\n                                                    );\n                                                })}\n                                            </div>\n                                        </div>\n                                    )}\n                                </PlacesAutocomplete>\n                            }\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Update Location</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(modifyLocationPage);\n","/* App router */\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from './components/header';\nimport LandingPage from './components/landing';\nimport SignUpPage from './components/signup';\nimport LoginPage from './components/login';\nimport MapContainer from './components/map';\nimport UserServiceApi from './api/UserServiceApi';\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport StaffRoute from './StaffRoute.jsx'\nimport LocationShowPage from './components/locationShow';\nimport FilterCarsPage from './components/bookingComponents/filterCars';\nimport BookingDashboard from './components/bookingComponents/bookingDashboard';\nimport MyBookingPage from './components/bookingComponents/myBookings';\nimport BookingDetailsPage from './components/bookingComponents/bookingDetails';\nimport MyProfilePage from './components/myProfile';\n\n/* Import admin and staff components */\nimport Overview from './components/staffComponents/overview';\nimport AdminSignUpPage from './components/adminComponents/adminSignup';\nimport CreateCar from './components/staffComponents/createCar';\nimport CreateLocation from './components/staffComponents/createLocation';\nimport ViewAllCustomersPage from './components/staffComponents/viewAllCustomers';\nimport ViewCustomerPage from './components/staffComponents/viewCustomer';\nimport ModifyCustomerDetailsPage from './components/staffComponents/modifyCustomerDetails';\nimport ViewAllBookingsPage from './components/staffComponents/viewAllBookings';\nimport ViewBookingPage from './components/staffComponents/viewBooking';\nimport ViewCustomerBookingsPage from './components/staffComponents/viewCustomerBookings';\nimport ViewAllCarsPage from './components/staffComponents/viewAllCars';\nimport ModifyCarDetailsPage from './components/staffComponents/modifyCarDetails';\nimport ViewAllLocations from './components/staffComponents/viewAllLocations';\nimport ViewLocation from './components/staffComponents/ViewLocation';\nimport ModifyLocationPage from './components/staffComponents/modifyLocationPage';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    availableCars: [],\n    pickupTime: \"\",\n    returnTime: \"\"\n  };\n\n  updateCars(availableCars, pickupTime, returnTime) {\n    this.setState({\n      availableCars: availableCars,\n      pickupTime: pickupTime,\n      returnTime: returnTime\n    });\n  }\n\n  componentDidMount() {\n    if (UserServiceApi.isUserLoggedIn()) {\n      UserServiceApi.setupAxiosInterceptors(UserServiceApi.getUserToken());\n    }\n  }\n\n  render() {\n    const { availableCars, pickupTime, returnTime } = this.state;\n    const isUserStaff = UserServiceApi.isUserStaff();\n    return (\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route path=\"/signup\" component={SignUpPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/locations/:id\" component={LocationShowPage} />\n          <Route path=\"/locations\" component={MapContainer} />\n          {/* Customers only routes */}\n          {!isUserStaff && <AuthenticatedRoute path=\"/filter\" component={(props) => <FilterCarsPage {...props}\n            availableCars={availableCars}\n            pickupTime={pickupTime}\n            returnTime={returnTime} />} />}\n          {!isUserStaff && <AuthenticatedRoute path=\"/dashboard\" component={(props) => <BookingDashboard {...props}\n            updateCars={this.updateCars.bind(this)} />} />}\n          {!isUserStaff && <AuthenticatedRoute path=\"/mybookings/:id\" component={BookingDetailsPage} />}\n          {!isUserStaff && <AuthenticatedRoute path=\"/mybookings\" component={MyBookingPage} />}\n          {!isUserStaff && <AuthenticatedRoute path=\"/myprofile\" component={MyProfilePage} />}\n          {/* Staff and admin only routes */}\n          <StaffRoute path=\"/staff\" component={Overview} />\n          <StaffRoute path=\"/admin/signup\" component={AdminSignUpPage} />\n          <StaffRoute path=\"/admin/addcars\" component={CreateCar} />\n          <StaffRoute path=\"/admin/addlocation\" component={CreateLocation} />\n          <StaffRoute path=\"/admin/view/customers/:id/bookings\" component={ViewCustomerBookingsPage} />\n          <StaffRoute path=\"/admin/view/customers/:id\" component={ViewCustomerPage} />\n          <StaffRoute path=\"/admin/view/customers\" component={ViewAllCustomersPage} />\n          <StaffRoute path=\"/admin/view/bookings/:id\" component={ViewBookingPage} />\n          <StaffRoute path=\"/admin/view/bookings\" component={ViewAllBookingsPage} />\n          <StaffRoute path=\"/admin/modify/customers/:id\" component={ModifyCustomerDetailsPage} />\n          <StaffRoute path=\"/admin/view/cars/:id\" component={ModifyCarDetailsPage} />\n          <StaffRoute path=\"/admin/view/cars\" component={ViewAllCarsPage} />\n          <StaffRoute path=\"/admin/modify/location/:id\" component={ModifyLocationPage} />\n          <StaffRoute path=\"/admin/view/location/:id\" component={ViewLocation} />\n          <StaffRoute path=\"/admin/view/location\" component={ViewAllLocations} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","/* Car service APIs */\nimport axios from 'axios';\nrequire('dotenv').config();\nconst api_url = process.env.REACT_APP_SERVER_URL + \"/cars\" || \"http://localhost:3001/api/cars\";\n//const api_url = \"http://localhost:3001/api/cars\";\n\nclass CarServiceApi {\n    createNewCar(newCar) {\n        return axios.post(api_url, newCar);\n    }\n\n    getAllCars() {\n        return axios.get(api_url);\n    }\n\n    getCar(carId) {\n        return axios.get(`${api_url}/${carId}`);\n    }\n\n    searchAvailableCars(search) {\n        return axios.post(api_url + '/availability', search);\n    }\n\n    filterCars(filter) {\n        return axios.post(api_url + '/filter', filter);\n    }\n\n    updateCar(car) {\n        return axios.patch(api_url + `/${car._id}`, car);\n    }\n}\n\nexport default new CarServiceApi();\n"],"sourceRoot":""}